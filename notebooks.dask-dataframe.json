{"version":2,"kind":"Notebook","sha256":"2bd7ef110d55ac498f81fcee8e1d87e7a2cd488ceba44d80e1ec84cd75d40f58","slug":"notebooks.dask-dataframe","location":"/notebooks/02-dask-dataframe.ipynb","dependencies":[],"frontmatter":{"title":"Dask DataFrame","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Negin Sobhani","given":"Negin","family":"Sobhani"},"name":"Negin Sobhani","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Brian Vanderwende","given":"Brian","family":"Vanderwende"},"name":"Brian Vanderwende","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Deepak Cherian","given":"Deepak","family":"Cherian"},"name":"Deepak Cherian","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Ben Kirk","given":"Ben","family":"Kirk"},"name":"Ben Kirk","id":"contributors-myst-generated-uid-3"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/dask-cookbook","copyright":"2024","affiliations":[{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"UCAR/NCAR","name":"UCAR/NCAR"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/dask-cookbook/blob/main/notebooks/02-dask-dataframe.ipynb","thumbnail":"/dask-cookbook/build/efb0893141695015b5a57e9702d22b2e.svg","exports":[{"format":"ipynb","filename":"02-dask-dataframe.ipynb","url":"/dask-cookbook/build/02-dask-dataframe-bf065d752088345af840c1715a9033cb.ipynb"}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{},"version_major":2,"version_minor":0}},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"image","url":"/dask-cookbook/build/efb0893141695015b5a57e9702d22b2e.svg","alt":"Dask logo","width":"30%","key":"qYLi9l7n8g","urlSource":"https://docs.dask.org/en/stable/_images/dask_horizontal.svg"}],"key":"Maa8qleDq7"},{"type":"heading","depth":1,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Dask DataFrame","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JmSCy0thpE"}],"identifier":"dask-dataframe","label":"Dask DataFrame","html_id":"dask-dataframe","implicit":true,"key":"Uxl8b3277X"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"In this tutorial, you learn:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CKjdhvcPtm"}],"identifier":"in-this-tutorial-you-learn","label":"In this tutorial, you learn:","html_id":"in-this-tutorial-you-learn","implicit":true,"key":"XaPalUfQFT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Basic concepts and features of Dask DataFrames","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"MoVuXcxCjl"}],"key":"wtzHvFxShl"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Applications of Dask DataFrames","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"XvDZ2Y7Dcw"}],"key":"qGsqJDxn7Z"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Interacting with Dask DataFrames","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"D4mav1v86r"}],"key":"zwwmw5yXx6"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Built-in operations with Dask DataFrames","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"OsdEbkrYVm"}],"key":"mcxMzlzkfH"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Dask DataFrames Best Practices","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Pt1Svrcbrl"}],"key":"m9dxyxTiqm"}],"key":"cf2mdu5yBq"},{"type":"heading","depth":3,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Related Documentation","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"e4vLbCtzmS"}],"identifier":"related-documentation","label":"Related Documentation","html_id":"related-documentation","implicit":true,"key":"SCB5aNNcUI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/en/stable/dataframe.html","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Dask DataFrame documentation","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"u2od4HO7eH"}],"urlSource":"https://docs.dask.org/en/stable/dataframe.html","key":"bGAsJKr5Ja"}],"key":"ieFtUr5W6R"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/en/stable/dataframe-api.html","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Dask DataFrame API","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"AS449DrTpf"}],"urlSource":"https://docs.dask.org/en/stable/dataframe-api.html","key":"YWqfxjg4vD"}],"key":"PWycUlYU0i"},{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"https://examples.dask.org/dataframe.html","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Dask DataFrame examples","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"vAfqBCKCPN"}],"urlSource":"https://examples.dask.org/dataframe.html","key":"SALklNBa72"}],"key":"myGHu5aqVP"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"link","url":"https://pandas.pydata.org/pandas-docs/stable/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"pandas documentation","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"rAkwfInO5f"}],"urlSource":"https://pandas.pydata.org/pandas-docs/stable/","key":"ZMPBu9SmX6"}],"key":"sQL5PMO78w"}],"key":"HfAP9gLpzs"},{"type":"heading","depth":3,"position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"xAJPGHFn9K"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"WEOy8MZvS6"},{"type":"table","position":{"start":{"line":25,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"REPIQjAw7x"}],"key":"dY9CFfpyRO"},{"type":"tableCell","header":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"jSoCATw5Sk"}],"key":"rOdnD2bY8h"},{"type":"tableCell","header":true,"position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"rDhsa0Scef"}],"key":"psJwclfhQx"}],"key":"KH4veSNKrk"},{"type":"tableRow","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"link","url":"https://pandas.pydata.org/docs/user_guide/10min.html","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Familiarity with Pandas DataFrame","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"BPjVoBjaHS"}],"urlSource":"https://pandas.pydata.org/docs/user_guide/10min.html","key":"ofRJ3I2CYW"}],"key":"t6SChB4XU1"},{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"W79AI6VwJf"}],"key":"fjFZLWz2xZ"},{"type":"tableCell","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[],"key":"hm5axN7wEG"}],"key":"eZjzGKgZH6"},{"type":"tableRow","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"link","url":"https://pandas.pydata.org/docs/user_guide/10min.html","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Dask Overview","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"e27IpQuelq"}],"urlSource":"https://pandas.pydata.org/docs/user_guide/10min.html","key":"htCfEObUvb"}],"key":"yTUCELQSnP"},{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"CPNMEkCB9x"}],"key":"K0yV2SkUVC"},{"type":"tableCell","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[],"key":"vqd2eOnzYV"}],"key":"MkMgdneguO"}],"key":"V8JFevRnHy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"strong","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"jkN9PCnlZO"}],"key":"GhTLsEtGT4"},{"type":"text","value":": 40 minutes","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"c1koxjmEoc"}],"key":"jf3BDDHbGp"}],"key":"KB6kc9H3fg"},{"type":"thematicBreak","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"wXdASGz3B2"},{"type":"heading","depth":2,"position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"y2OJi63pGW"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"pVahS1oCuk"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"image","url":"/dask-cookbook/build/b82c470bd299758cae1ef1bfd8655169.svg","alt":"Dask DataFrame is composed of pandas DataFrames","width":"530px","key":"koxF4PwozO","urlSource":"https://docs.dask.org/en/stable/_images/dask-dataframe.svg"}],"key":"Km97wanQ43"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Image credit: Dask Contributors","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"bpwzI42aDj"}],"key":"fo5PW2qvxX"}],"key":"u61217gEmc"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"pandas is a very popular tool for working with ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"nutsJ2sDTa"},{"type":"strong","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"tabular datasets","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"SRH23F5Peu"}],"key":"n2NfSWUPzd"},{"type":"text","value":", but the dataset needs to ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"M0MzpZpxP8"},{"type":"strong","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"fit into the memory","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"gGTcqmD2f3"}],"key":"pWWpObHliG"},{"type":"text","value":".","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"khiUq7ADJn"}],"key":"v5ZqHhY3F2"},{"type":"paragraph","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"children":[{"type":"text","value":"pandas operates best with smaller datasets, and if you have a large dataset, you’ll receive an out of memory error using pandas. A general rule of thumb for pandas is:","position":{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},"key":"a1nJG2ywKM"}],"key":"cSYc4MT9pa"},{"type":"blockquote","position":{"start":{"line":46,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"definitionList","position":{"start":{"line":46,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"definitionTerm","position":{"start":{"line":46,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"“Have 5 to 10 times as much RAM as the size of your dataset”","position":{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},"key":"uvetgqRfFX"}],"key":"h9Y631jJKw"},{"type":"definitionDescription","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"Wes McKinney (2017) in ","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"XJNyroFuIX"},{"type":"link","url":"https://wesmckinney.com/blog/apache-arrow-pandas-internals/","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"10 things I hate about pandas","position":{"start":{"line":48,"column":1},"end":{"line":48,"column":1}},"key":"FOd3yo16Yg"}],"urlSource":"https://wesmckinney.com/blog/apache-arrow-pandas-internals/","key":"lPZo6ccY6H"}],"key":"BNHeQ9dX1a"}],"key":"mt4R7rEjcB"}],"key":"THbY0GeFmo"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"But Dask DataFrame can be used to solve pandas performance issues with larger-than-memory datasets.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"gSGVt8rfZI"}],"key":"JeICoKnrrb"},{"type":"heading","depth":3,"position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"children":[{"type":"text","value":"What is Dask DataFrame?","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"owtuWKXSyJ"}],"identifier":"what-is-dask-dataframe","label":"What is Dask DataFrame?","html_id":"what-is-dask-dataframe","implicit":true,"key":"qtPXlR6411"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":56,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":56,"column":1},"end":{"line":57,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"strong","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"A Dask DataFrame is a parallel DataFrame composed of smaller pandas DataFrames (also known as ","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"egCU5mTJWM"},{"type":"emphasis","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"children":[{"type":"text","value":"partitions","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"LxXI3HyqZC"}],"key":"ATT7gBCNop"},{"type":"text","value":").","position":{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},"key":"WFBwjnx9IR"}],"key":"aBtA4QNQTH"}],"key":"hXLgS2iSRW"}],"key":"SBqQgnz6yq"},{"type":"listItem","spread":true,"position":{"start":{"line":58,"column":1},"end":{"line":59,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"Dask Dataframes look and feel like the pandas DataFrames on the surface.","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"KoQxRa0ZnE"}],"key":"DlpOiZTKzh"}],"key":"oTWONgsdc3"},{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"Dask DataFrames partition the data into manageable ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"fFbPkX40Gm"},{"type":"strong","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"partitions","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"P3mcL4wABP"}],"key":"sbk5ZOY7tE"},{"type":"text","value":" that can be processed in parallel and across multiple cores or computers.","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"bL5tvo2aD3"}],"key":"XZIkIK5Kp7"}],"key":"cQ2lkSyyRX"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":65,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Similar to Dask Arrays, Dask DataFrames are lazy!","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"ikPCWvlx2Y"}],"key":"gJJr4eIcxV"},{"type":"paragraph","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Unlike pandas, operations on Dask DataFrames are not computed until you explicitly request them (e.g. by calling ","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"ceWHFMfTAO"},{"type":"inlineCode","value":".compute","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"LY5o4aiP7C"},{"type":"text","value":").","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"R1uRgRAaXc"}],"key":"ttcPBBBMKs"}],"key":"gpOMDALsa5"}],"key":"u6jzbgH3YK"}],"key":"EOeA6cw7A6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"When to use Dask DataFrame and when to avoid it?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BH78Vuzu3l"}],"identifier":"when-to-use-dask-dataframe-and-when-to-avoid-it","label":"When to use Dask DataFrame and when to avoid it?","html_id":"when-to-use-dask-dataframe-and-when-to-avoid-it","implicit":true,"key":"sxV5U7Qm3j"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Dask DataFrames are used in situations where pandas ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YYLeCToNOM"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"fails","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K0uc6UFATx"}],"key":"AdG1aCuNNu"},{"type":"text","value":" or has ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xIuwnnbXHl"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"poor performance due to data size","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"y4nU5QJYCS"}],"key":"eIL6curb6B"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"erFzL1naH7"}],"key":"E1GiTpXS70"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Dask DataFrame is a good choice when doing ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ioK639qIMN"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"parallalizeable computations","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RNl6ksnGy8"}],"key":"ikmHl3xo5n"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"E0FRBii8Hd"},{"type":"break","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ymjZktBKBI"},{"type":"text","value":"Some examples are:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VkFjXoSHHp"}],"key":"i67CieHo3D"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Element-wise operations such as ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"gIWL2XaHjc"},{"type":"inlineCode","value":"df.x + df.y","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"RVCczIVMTz"}],"key":"at04tsVG0t"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Row-wise filtering such as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FLz2lyuHLa"},{"type":"inlineCode","value":"df[df.x>0]","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"SeYiv8Vpw1"}],"key":"FlUyuYSxOd"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Common aggregations such as ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"RAemGAyVHN"},{"type":"inlineCode","value":"df.x.max()","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"L18AUKxFuy"}],"key":"SJFSZrz7YP"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Dropping duplicates such as ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"goVBRAyqxo"},{"type":"inlineCode","value":"df.x.drop_duplicate()","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"E7SIRZptXb"}],"key":"FWXH5ASiU6"}],"key":"nj3KfFNY8u"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"However, Dask is not great for operations that requires shuffling or re-indexing.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"hnWsunbb3j"},{"type":"break","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"T0WWti27Em"},{"type":"text","value":"Some examples are:","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"uRe8TvQpBi"}],"key":"IaxbbFy4WD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Set index: ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"ftGZbeGFu9"},{"type":"inlineCode","value":"df.set_index(df.x)","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"UXxwczJnec"}],"key":"XethXCtuR6"}],"key":"ejHGBhmhbK"},{"type":"div","class":"alert alert-block alert-warning","children":[{"type":"strong","children":[{"type":"text","value":"WARNING:","key":"G20jpRkBmk"}],"key":"x9oWJgMHws"},{"type":"text","value":" Although, Dask DataFrame has a very similar interface to the pandas DataFrame (as we will see in this tutorial), it does NOT include some of the pandas interface yet.","key":"mnHg5wbggL"},{"type":"paragraph","children":[{"type":"text","value":"See the ","key":"qyfJ2oHuKA"},{"type":"link","url":"https://docs.dask.org/en/stable/dataframe-api.html","children":[{"type":"text","value":"Dask DataFrame API documentation","key":"rYtzyE8u4m"}],"urlSource":"https://docs.dask.org/en/stable/dataframe-api.html","key":"EkTtRocBuC"},{"type":"text","value":" for a compehnsive list of available functions.","key":"V886Q3hMv5"}],"key":"YXABqVNQda"}],"key":"l1KreXhUDW"},{"type":"thematicBreak","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"spRRHVtXw0"}],"key":"Lc6TR4yIiD"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tutorial Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VRfckVUAAI"}],"identifier":"tutorial-dataset","label":"Tutorial Dataset","html_id":"tutorial-dataset","implicit":true,"key":"v5FrAZnptP"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In this tutorial, we are going to use the NOAA Global Historical Climatology Network Daily (GHCN-D) dataset.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"K9rQFTbIKn"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"H0fABEtnT9"},{"type":"text","value":"GHCN-D is a public available dataset that includes daily climate records from +100,000 surface observations around the world.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hTp9EWtdj5"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"R3X2JpRlxq"},{"type":"text","value":"This is an example of a real dataset that is used by NCAR scientists for their research. GHCN-D raw dataset for all stations is available through ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JmlaD7ek9l"},{"type":"link","url":"https://www.ncdc.noaa.gov/cdo-web/search?datasetid=GHCND","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"NOAA Climate Data Online","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"A1TcLiUg3L"}],"urlSource":"https://www.ncdc.noaa.gov/cdo-web/search?datasetid=GHCND","key":"Rkkg2jJAn9"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gtRneVcRrV"}],"key":"AkqerlCCg8"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"To learn more about GHCNd dataset, please visit:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"JLIzTJVGqQ"}],"key":"vTPsEExE5l"}],"key":"GXDd65ISqM"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://journals.ametsoc.org/view/journals/atot/29/7/jtech-d-11-00103_1.xml","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"GHCNd Journal Paper","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LL49R9GEHQ"}],"urlSource":"https://journals.ametsoc.org/view/journals/atot/29/7/jtech-d-11-00103_1.xml","key":"QbRD96XFFV"}],"key":"SLvUM3EfFv"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"https://www.ncei.noaa.gov/products/land-based-station/global-historical-climatology-network-daily","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"GHCNd Official Website","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"a6DjjenN9t"}],"urlSource":"https://www.ncei.noaa.gov/products/land-based-station/global-historical-climatology-network-daily","key":"RUxA34Jh9o"}],"key":"cIjuDwG00u"}],"key":"qyun4c4IUX"},{"type":"heading","depth":3,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Download the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"YT9h2hTmh7"}],"identifier":"download-the-data","label":"Download the data","html_id":"download-the-data","implicit":true,"key":"wzQt4T0rQl"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"For this example, we are going to look through a subset of data from the GHCN-D dataset.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"s7K3li63n0"}],"key":"proF3Q9eGv"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"First, we look at the daily observations from Denver International Airport, next we are going to look through selected stations in the US.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"zlDGcm3R2A"}],"key":"KNNasdCBPh"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"The access the preprocessed dataset for this tutorial, please run the following script:","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"h9lGt1Jdzn"}],"key":"NAhTTtt1BM"}],"visibility":"show","key":"tYrFH5IOUL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!./get_data.sh","key":"KAtXAZo4wh"},{"type":"output","id":"z-eoc9zv_MIj2rmkswY2M","data":[{"output_type":"stream","name":"stdout","text":"Downloading https://docs.google.com/uc?export=download&id=14doSRn8hT14QYtjZz28GKv14JgdIsbFF\r\n"},{"output_type":"stream","name":"stdout","text":"tar (child): data.tar.gz: Cannot open: No such file or directory\r\ntar (child): Error is not recoverable: exiting now\r\n"},{"output_type":"stream","name":"stdout","text":"tar: Child returned status 2\r\ntar: Error is not recoverable: exiting now\r\nrm: cannot remove 'data.tar.gz': No such file or directory\r\nDownloading https://docs.google.com/uc?export=download&id=15rCwQUxxpH6angDhpXzlvbe1nGetYHrf\r\n"},{"output_type":"stream","name":"stdout","text":"USC00057936.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00058204.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00058429.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00059243.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00068138.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00080211.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00084731.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00088824.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00098703.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00100010.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00100470.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00105275.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00106152.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00107264.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00108137.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00110338.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00112140.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00112193.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00112348.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00112483.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00113335.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00114108.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00114442.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00114823.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115079.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115326.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115712.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115768.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115833.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115901.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00115943.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USC00116446.csv\r\n"},{"output_type":"stream","name":"stdout","text":"USW00003017.csv\r\n"},{"output_type":"stream","name":"stdout","text":"Downloading https://docs.google.com/uc?export=download&id=1Tbuom1KMCwHjy7-eexEQcOXSr51i6mae\r\n"},{"output_type":"stream","name":"stdout","text":"\r\ngzip: stdin: not in gzip format\r\ntar: Child returned status 1\r\ntar: Error is not recoverable: exiting now\r\n"}],"key":"IpGiaAvVz5"}],"key":"oZimGprlc1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This script should save the preprocessed GHCN-D data in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"koEfj3rKQW"},{"type":"inlineCode","value":"../data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ROCVe2WDoc"},{"type":"text","value":" path.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Mqs4YEMzpQ"}],"key":"NN7p5Us26U"}],"key":"e67jkUKB5Q"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ynVhdP510d"},{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Pandas DataFrame Basics","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"b0ZloAmMS4"}],"identifier":"pandas-dataframe-basics","label":"Pandas DataFrame Basics","html_id":"pandas-dataframe-basics","implicit":true,"key":"d3RRYrkUei"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s start with an example using pandas DataFrame.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LrjaAgzJQX"}],"key":"eTMatlRqya"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"First, let’s read in the comma-seperated GHCN-D dataset for one station at ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"b3MnY63NKk"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Denver International Airport (DIA), CO","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VkzOEmia4B"}],"key":"L2NLGNDMRh"},{"type":"text","value":" (site ID : ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vdHR7v2ohF"},{"type":"inlineCode","value":"USW00003017","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pt8DejxB4G"},{"type":"text","value":").","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KENfRFRazP"}],"key":"JwH4l9IQIf"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"To see the list of all available GHCN-D sites and their coordinates and IDs, please see ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rdVq8KnmTI"},{"type":"link","url":"https://www.ncei.noaa.gov/pub/data/ghcn/daily/ghcnd-stations.txt","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"this link","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MpIeFUKK3H"}],"urlSource":"https://www.ncei.noaa.gov/pub/data/ghcn/daily/ghcnd-stations.txt","key":"eC2okNbeNe"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UrW7R66t8p"}],"key":"HUSM5fUiq3"}],"key":"J7NkzmVBJh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport pandas as pd\n\n# DIA ghcnd id\nsite = 'USW00003017'\ndata_dir = '../data/'\n\n\ndf = pd.read_csv(os.path.join(data_dir, site+'.csv'), parse_dates=['DATE'], index_col=0)","key":"GjpQO3HYHf"},{"type":"output","id":"R0H7AovR1c2zqmiopF6Lz","data":[],"key":"QrEbwUByLo"}],"key":"R0fsE9oXRB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Display the top five rows of the dataframe\ndf.head()","key":"GKWQXbQQc3"},{"type":"output","id":"iIC9_MxlKv_iqidHVU25a","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"                     ID  YEAR  MONTH  DAY   TMAX TMAX_FLAGS   TMIN TMIN_FLAGS  \\\nDATE                                                                            \n1994-07-20  USW00003017  1994      7   20  316.0        XXS  150.0        XXS   \n1994-07-23  USW00003017  1994      7   23  355.0        XXS  166.0        XXS   \n1994-07-24  USW00003017  1994      7   24  333.0        XXS  155.0        XXS   \n1994-07-25  USW00003017  1994      7   25  327.0        XXS  172.0        XXS   \n1994-07-26  USW00003017  1994      7   26  327.0        XXS  155.0        XXS   \n\n            PRCP PRCP_FLAGS  ...  RHMN_FLAGS RHMX  RHMX_FLAGS PSUN  \\\nDATE                         ...                                     \n1994-07-20  20.0        DXS  ...         XXX  NaN         XXX  NaN   \n1994-07-23   0.0        DXS  ...         XXX  NaN         XXX  NaN   \n1994-07-24  81.0        DXS  ...         XXX  NaN         XXX  NaN   \n1994-07-25   0.0        DXS  ...         XXX  NaN         XXX  NaN   \n1994-07-26   0.0        DXS  ...         XXX  NaN         XXX  NaN   \n\n            PSUN_FLAGS LATITUDE  LONGITUDE ELEVATION  STATE         STATION  \nDATE                                                                         \n1994-07-20         XXX  39.8467  -104.6561    1647.1     CO  DENVER INTL AP  \n1994-07-23         XXX  39.8467  -104.6561    1647.1     CO  DENVER INTL AP  \n1994-07-24         XXX  39.8467  -104.6561    1647.1     CO  DENVER INTL AP  \n1994-07-25         XXX  39.8467  -104.6561    1647.1     CO  DENVER INTL AP  \n1994-07-26         XXX  39.8467  -104.6561    1647.1     CO  DENVER INTL AP  \n\n[5 rows x 99 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>YEAR</th>\n      <th>MONTH</th>\n      <th>DAY</th>\n      <th>TMAX</th>\n      <th>TMAX_FLAGS</th>\n      <th>TMIN</th>\n      <th>TMIN_FLAGS</th>\n      <th>PRCP</th>\n      <th>PRCP_FLAGS</th>\n      <th>...</th>\n      <th>RHMN_FLAGS</th>\n      <th>RHMX</th>\n      <th>RHMX_FLAGS</th>\n      <th>PSUN</th>\n      <th>PSUN_FLAGS</th>\n      <th>LATITUDE</th>\n      <th>LONGITUDE</th>\n      <th>ELEVATION</th>\n      <th>STATE</th>\n      <th>STATION</th>\n    </tr>\n    <tr>\n      <th>DATE</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1994-07-20</th>\n      <td>USW00003017</td>\n      <td>1994</td>\n      <td>7</td>\n      <td>20</td>\n      <td>316.0</td>\n      <td>XXS</td>\n      <td>150.0</td>\n      <td>XXS</td>\n      <td>20.0</td>\n      <td>DXS</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>39.8467</td>\n      <td>-104.6561</td>\n      <td>1647.1</td>\n      <td>CO</td>\n      <td>DENVER INTL AP</td>\n    </tr>\n    <tr>\n      <th>1994-07-23</th>\n      <td>USW00003017</td>\n      <td>1994</td>\n      <td>7</td>\n      <td>23</td>\n      <td>355.0</td>\n      <td>XXS</td>\n      <td>166.0</td>\n      <td>XXS</td>\n      <td>0.0</td>\n      <td>DXS</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>39.8467</td>\n      <td>-104.6561</td>\n      <td>1647.1</td>\n      <td>CO</td>\n      <td>DENVER INTL AP</td>\n    </tr>\n    <tr>\n      <th>1994-07-24</th>\n      <td>USW00003017</td>\n      <td>1994</td>\n      <td>7</td>\n      <td>24</td>\n      <td>333.0</td>\n      <td>XXS</td>\n      <td>155.0</td>\n      <td>XXS</td>\n      <td>81.0</td>\n      <td>DXS</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>39.8467</td>\n      <td>-104.6561</td>\n      <td>1647.1</td>\n      <td>CO</td>\n      <td>DENVER INTL AP</td>\n    </tr>\n    <tr>\n      <th>1994-07-25</th>\n      <td>USW00003017</td>\n      <td>1994</td>\n      <td>7</td>\n      <td>25</td>\n      <td>327.0</td>\n      <td>XXS</td>\n      <td>172.0</td>\n      <td>XXS</td>\n      <td>0.0</td>\n      <td>DXS</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>39.8467</td>\n      <td>-104.6561</td>\n      <td>1647.1</td>\n      <td>CO</td>\n      <td>DENVER INTL AP</td>\n    </tr>\n    <tr>\n      <th>1994-07-26</th>\n      <td>USW00003017</td>\n      <td>1994</td>\n      <td>7</td>\n      <td>26</td>\n      <td>327.0</td>\n      <td>XXS</td>\n      <td>155.0</td>\n      <td>XXS</td>\n      <td>0.0</td>\n      <td>DXS</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>39.8467</td>\n      <td>-104.6561</td>\n      <td>1647.1</td>\n      <td>CO</td>\n      <td>DENVER INTL AP</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 99 columns</p>\n</div>","content_type":"text/html"}}}],"key":"zLLTFJKnyy"}],"key":"gU85FhQMH4"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Question:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UM6PzKZO4I"}],"key":"dBKeytqWWu"},{"type":"text","value":" What variables are available?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BlkF2beALz"}],"key":"S95R8lpxaA"}],"key":"ThIzJ0kYPp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df.columns","key":"o867neGBbB"},{"type":"output","id":"jIpO6cu6dM7rmDecanWiM","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"Index(['ID', 'YEAR', 'MONTH', 'DAY', 'TMAX', 'TMAX_FLAGS', 'TMIN',\n       'TMIN_FLAGS', 'PRCP', 'PRCP_FLAGS', 'TAVG', 'TAVG_FLAGS', 'SNOW',\n       'SNOW_FLAGS', 'SNWD', 'SNWD_FLAGS', 'AWND', 'AWND_FLAGS', 'FMTM',\n       'FMTM_FLAGS', 'PGTM', 'PGTM_FLAGS', 'WDF2', 'WDF2_FLAGS', 'WDF5',\n       'WDF5_FLAGS', 'WSF2', 'WSF2_FLAGS', 'WSF5', 'WSF5_FLAGS', 'WT01',\n       'WT01_FLAGS', 'WT02', 'WT02_FLAGS', 'WT08', 'WT08_FLAGS', 'WT16',\n       'WT16_FLAGS', 'WT17', 'WT17_FLAGS', 'WT18', 'WT18_FLAGS', 'WT03',\n       'WT03_FLAGS', 'WT05', 'WT05_FLAGS', 'WT19', 'WT19_FLAGS', 'WT10',\n       'WT10_FLAGS', 'WT09', 'WT09_FLAGS', 'WT06', 'WT06_FLAGS', 'WT07',\n       'WT07_FLAGS', 'WT11', 'WT11_FLAGS', 'WT13', 'WT13_FLAGS', 'WT21',\n       'WT21_FLAGS', 'WT14', 'WT14_FLAGS', 'WT15', 'WT15_FLAGS', 'WT22',\n       'WT22_FLAGS', 'WT04', 'WT04_FLAGS', 'WV03', 'WV03_FLAGS', 'TSUN',\n       'TSUN_FLAGS', 'WV01', 'WV01_FLAGS', 'WESD', 'WESD_FLAGS', 'ADPT',\n       'ADPT_FLAGS', 'ASLP', 'ASLP_FLAGS', 'ASTP', 'ASTP_FLAGS', 'AWBT',\n       'AWBT_FLAGS', 'RHAV', 'RHAV_FLAGS', 'RHMN', 'RHMN_FLAGS', 'RHMX',\n       'RHMX_FLAGS', 'PSUN', 'PSUN_FLAGS', 'LATITUDE', 'LONGITUDE',\n       'ELEVATION', 'STATE', 'STATION'],\n      dtype='object')","content_type":"text/plain"}}}],"key":"x0GidGJCVu"}],"key":"ZB4iJ76eEA"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The description and units of the dataset is available ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZQWV5GwDAW"},{"type":"link","url":"https://www.ncei.noaa.gov/pub/data/ghcn/daily/readme.txt","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HCeDF8qPAu"}],"urlSource":"https://www.ncei.noaa.gov/pub/data/ghcn/daily/readme.txt","key":"lqc8oAt7bm"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z3ceJTuhVx"}],"key":"kQMSKNIbyp"}],"key":"aRrUWXnHv3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Operations on pandas DataFrame","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uuhWgewu0x"}],"identifier":"operations-on-pandas-dataframe","label":"Operations on pandas DataFrame","html_id":"operations-on-pandas-dataframe","implicit":true,"key":"D8iSo8E4de"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"pandas DataFrames has several features that give us flexibility to do different calculations and analysis on our dataset. Let’s check some out:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XncRn0LQ8y"}],"key":"HXPcvK2NEX"},{"type":"heading","depth":4,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Simple Analysis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lL4GgpBPlv"}],"identifier":"simple-analysis","label":"Simple Analysis","html_id":"simple-analysis","implicit":true,"key":"i9I0YuRdsg"}],"key":"JJc1cCrfVE"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e4GjpJFSLe"}],"key":"feDDhGM6fz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"When was the coldest day at this station during December of last year?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I7R73DLJBy"}],"key":"jOCGx77Pnx"}],"key":"SxFRjP1TBv"}],"key":"bW2PizW2uv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# use python slicing notation inside .loc \n# use idxmin() to find the index of minimum valus\ndf.loc['2022-12-01':'2022-12-31'].TMIN.idxmin()","key":"gtN18nuOgs"},{"type":"output","id":"ysDCspXar4-KmoLcGej28","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2022-12-22 00:00:00')","content_type":"text/plain"}}}],"key":"Wrbhk8JjLK"}],"key":"yAnbDBo0G2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Here we easily plot the prior data using matplotlib from pandas\n# -- .loc for value based indexing\ndf.loc['2022-12-01':'2022-12-31'].SNWD.plot(ylabel= 'Daily Average Snow Depth [mm]')","key":"g8WumixfWA"},{"type":"output","id":"WSXoi1FE2wMUos4Bm0eHK","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"<Axes: xlabel='DATE', ylabel='Daily Average Snow Depth [mm]'>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 640x480 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"3df08f8e4c5b4720681d97c30db47639","path":"/dask-cookbook/build/3df08f8e4c5b4720681d97c30db47639.png"}}}],"key":"fZybBgQHA1"}],"key":"VlMcCAhW5b"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"How many snow days do we have each year at this station?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aA9n13Wknd"}],"key":"aTU3sK0XTZ"}],"key":"SIKba96Kzs"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Pandas groupby is used for grouping the data according to the categories.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TFe2asqmyV"}],"key":"iBRZT1swOF"}],"key":"lCmiyC4yiB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# 1- First select days with snow > 0\n# 2- Create a \"groupby object\" based on the selected columns\n# 3- use .size() to compute the size of each group\n# 4- sort the values descending \n\n# we count days where SNOW>0, and sort them and show top 5 years:\ndf[df['SNOW']>0].groupby('YEAR').size().sort_values(ascending=False).head()\n","key":"ZVEbUwHnZG"},{"type":"output","id":"znKQ86aGHkonaZq2w8TMp","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"YEAR\n2015    36\n2019    34\n2014    32\n2008    32\n2007    31\ndtype: int64","content_type":"text/plain"}}}],"key":"JYpci6aOeR"}],"key":"cq62zBrwyr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Or for a more complex analysis:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tItQV8k0f3"}],"key":"ZS9D4AfEUu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For example, we have heard that this could be Denver’s first January in 13 years with no 60-degree days.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JOaufe2q4s"}],"key":"L6c9WH0r51"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"image","url":"/dask-cookbook/build/576ee6c7ccc2f9c50f73ce145e8f7592.png","alt":"News article showing that this January is abnormally warm","key":"b2W6xeqTjx","urlSource":"https://raw.githubusercontent.com/ProjectPythia/dask-cookbook/main/notebooks/images/denver.png"}],"key":"gmtwFsOQ3o"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below, we show all days with high temperature above 60°F (155.5°C/10) since 2010:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"E6pxeEvqqw"}],"key":"d9cFE3hNet"}],"key":"nWJtZj2QzC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"df[(df['MONTH']==1) & (df['YEAR']>=2010) & (df['TMAX']>155.5)].groupby(['YEAR']).size()","key":"yddtPeYlf4"},{"type":"output","id":"JUcTpoWJRzjyhARLBWY2n","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"YEAR\n2011    1\n2012    6\n2013    4\n2014    3\n2015    6\n2016    1\n2017    4\n2018    5\n2019    3\n2020    2\n2021    2\n2022    3\ndtype: int64","content_type":"text/plain"}}}],"key":"S8z6NOZgvJ"}],"key":"TnBJaloURY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This is great! But how big is this dataset for one station?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"l4l0nhAAyB"}],"key":"xDHBY3kxai"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"First, let’s check the file size:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qikAHsQ5Zg"}],"key":"rc6M3yTiCQ"}],"key":"hjTR8lfXsL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!ls -lh ../data/USW00003017.csv","key":"sCQHOPt9mF"},{"type":"output","id":"IS-1EuwCjFGenceAdG8aB","data":[{"output_type":"stream","name":"stdout","text":"-rw-r--r-- 1 runner docker 3.6M Feb  5  2023 ../data/USW00003017.csv\r\n"}],"key":"MxBSsGtH1E"}],"key":"jCXVdPyCqU"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Similar to the previous tutorial, we can use the following function to find the size of a variable on memory.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rWBIh88PfR"}],"key":"NSZX8k0YRH"}],"key":"aqUeVtgSI3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define function to display variable size in MB\nimport sys\ndef var_size(in_var):\n    result = sys.getsizeof(in_var) / 1e6\n    print(f\"Size of variable: {result:.2f} MB\")","key":"IDZR0STPEs"},{"type":"output","id":"lq7Fgq67q8j2ZCP23fcsr","data":[],"key":"jFl8kAntyd"}],"key":"WvBuAojEDo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"var_size(df)","key":"CD5UAK0RLo"},{"type":"output","id":"f8DWFIt49Xi5755wEJ81Q","data":[{"output_type":"stream","name":"stdout","text":"Size of variable: 29.39 MB\n"}],"key":"q71JIRod3f"}],"key":"gqUMWhk8k2"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Remember, the above rule?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"S43xXLMsNI"}],"key":"icOMvKnerI"},{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"definitionList","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"definitionTerm","position":{"start":{"line":3,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"“Have 5 to 10 times as much RAM as the size of your dataset”","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oIbfulgi4x"}],"key":"ZAuewAHC3Z"},{"type":"definitionDescription","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Wes McKinney (2017) in ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eKnQZGAQFF"},{"type":"link","url":"https://wesmckinney.com/blog/apache-arrow-pandas-internals/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"10 things I hate about pandas","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"d7Bf21OhQm"}],"urlSource":"https://wesmckinney.com/blog/apache-arrow-pandas-internals/","key":"LDVp2nIycz"}],"key":"Bl5yiBPpKl"}],"key":"bkmEvwNDrm"}],"key":"wkp0tdjcbJ"}],"key":"yvaE7YZVsW"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"So far, we read in and analyzed data for one station. We have a total of +118,000 stations over the world and +4500 stations in Colorado alone!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"B1v8LdL0tS"}],"key":"GBPHBi0L17"}],"key":"Hv1bzecAHD"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"What if we want to look at the larger dataset?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nrTkEqnZId"}],"key":"Aq2THnWSzb"}],"key":"RUS57UcLBC"},{"type":"heading","depth":2,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Scaling up to a larger dataset","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cSBB6encfD"}],"identifier":"scaling-up-to-a-larger-dataset","label":"Scaling up to a larger dataset","html_id":"scaling-up-to-a-larger-dataset","implicit":true,"key":"qx2YfKeFfi"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s start by reading data from selected stations. The downloaded data for this example includes the climatology observations from 66 selected sites in Colorado.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"smyqLRwEhE"}],"key":"uPBDEIgHdX"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Pandas can concatenate data to load data spread across multiple files:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"TJCJyTtoST"}],"key":"TN9k5MSctb"}],"key":"QVZJxvZIZu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!du -csh ../data/*.csv |tail -n1","key":"RuNAuXunz1"},{"type":"output","id":"U3fL6YiV1-vYoON_UejT2","data":[{"output_type":"stream","name":"stdout","text":"286M\ttotal\r\n"}],"key":"vOKTWvH52r"}],"key":"iibEEWVs6u"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Using a for loop with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PbazCXGjdG"},{"type":"inlineCode","value":"pandas.concat","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"usfISGZDxV"},{"type":"text","value":", we can read multiple files at the same time:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qq6rXDiQMN"}],"key":"P8uuwjlR9K"}],"key":"Gy5cf0fLRw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nimport glob\nco_sites = glob.glob(os.path.join(data_dir, '*.csv'))\ndf = pd.concat(pd.read_csv(f, index_col=0, parse_dates=['DATE']) for f in co_sites)","key":"Dk9OeaxSKI"},{"type":"output","id":"2SyBKh5LzxY_o0IP9Iur9","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 6.37 s, sys: 1 s, total: 7.37 s\nWall time: 19.1 s\n"}],"key":"F3V3xcJY7h"}],"key":"X3EL1ctYwY"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How many stations have we read in?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZFqh16V0EP"}],"key":"JDYFfkMeBD"}],"key":"ozkCuLyWZw"}],"key":"DhirvXJakx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print (\"Concatenated data for\", len(df.ID.unique()), \"unique sites.\")","key":"rjoLdoqmWi"},{"type":"output","id":"eKkxF84t1eyVHUwSQUbTh","data":[{"output_type":"stream","name":"stdout","text":"Concatenated data for 33 unique sites.\n"}],"key":"YO1BiJMICa"}],"key":"y0ZZ46nZ9i"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we concatenated the data for all sites in one DataFrame, we can do similar analysis on it:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"whHtDn36ef"}],"key":"rBerBzpaPb"}],"key":"xdxCv15gBu"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Which site has recorded the most snow days in a year?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fsO5DFsoyk"}],"key":"AqAVTGiDp1"}],"key":"sXsPD4OEU3"}],"key":"Dhvx5GGwUY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n# ~90s on 4GB RAM\nsnowy_days = df[df['SNOW']>0].groupby(['ID','YEAR']).size()\n\nprint ('This site has the highest number of snow days in a year : ')\nsnowy_days.agg(['idxmax','max'])","key":"gvBFtQvriw"},{"type":"output","id":"FiQx2bOPWdMyAHvSdfFFd","data":[{"output_type":"stream","name":"stdout","text":"This site has the highest number of snow days in a year : \nCPU times: user 218 ms, sys: 2.4 ms, total: 220 ms\nWall time: 400 ms\n"},{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"idxmax    (USC00114823, 2009)\nmax                        97\ndtype: object","content_type":"text/plain"}}}],"key":"WJnsWvZfMP"}],"key":"NcMLsUlvF6"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Excersise:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RbSFxNzGN4"}],"key":"HBJmwBHGDq"},{"type":"text","value":" Which Colorado site has recorded the most snow days in 2023?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xZOl5ANeQd"}],"key":"zG9CSqzROK"}],"key":"R5yM1cSgKd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask allows us to conceptualize all of these files as a single dataframe!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vNYIVbqnBk"}],"key":"kKOBvcq1e0"}],"key":"aTfTeCxU90"}],"key":"E7uYqjGzt6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Let's do a little cleanup\ndel df, snowy_days","key":"EMDXCIn6gC"},{"type":"output","id":"ARwMVoDPH4zdcC2oxaOdy","data":[],"key":"bEKhK79P6w"}],"key":"qT0KEay1Jj"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computations on Dask DataFrame","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PzzXyFSFvJ"}],"identifier":"computations-on-dask-dataframe","label":"Computations on Dask DataFrame","html_id":"computations-on-dask-dataframe","implicit":true,"key":"rVbYc7o52C"}],"key":"Yh8k4me1F1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a “LocalCluster” Client with Dask","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HXfG2MUvM4"}],"identifier":"create-a-localcluster-client-with-dask","label":"Create a “LocalCluster” Client with Dask","html_id":"create-a-localcluster-client-with-dask","implicit":true,"key":"Ecyl8XuOHq"}],"key":"DJEMuEWANE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from dask.distributed import Client, LocalCluster\n\ncluster = LocalCluster()\nclient = Client(cluster)\nclient","key":"LbPwgvranq"},{"type":"output","id":"8fwPMwVdysOQDOnEJDm38","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/dask-cookbook/lib/python3.13/site-packages/distributed/node.py:187: UserWarning: Port 8787 is already in use.\nPerhaps you already have a cluster running?\nHosting the HTTP server on port 43709 instead\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"<Client: 'tcp://127.0.0.1:34103' processes=4 threads=4, memory=15.62 GiB>","content_type":"text/plain"},"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-48d2cd62-522f-11f0-8fdc-7ced8d2b2749</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> distributed.LocalCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:43709/status\" target=\"_blank\">http://127.0.0.1:43709/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n            <button style=\"margin-bottom: 12px;\" data-commandlinker-command=\"dask:populate-and-launch-layout\" data-commandlinker-args='{\"url\": \"http://127.0.0.1:43709/status\" }'>\n                Launch dashboard in JupyterLab\n            </button>\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">136b3f75</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:43709/status\" target=\"_blank\">http://127.0.0.1:43709/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-f87e9f42-3415-465d-863d-65ee5c5c3fe1</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:34103\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:43709/status\" target=\"_blank\">http://127.0.0.1:43709/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:32789\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:41301/status\" target=\"_blank\">http://127.0.0.1:41301/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:40571\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-l1xorj8a\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:38733\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:33035/status\" target=\"_blank\">http://127.0.0.1:33035/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:35129\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-ppx_1ip4\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:45151\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:41635/status\" target=\"_blank\">http://127.0.0.1:41635/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:43211\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-vo9jrw5h\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:41821\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:37953/status\" target=\"_blank\">http://127.0.0.1:37953/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:38131\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-on7h__gi\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"}}}],"key":"vRTXqvgbIh"}],"key":"RaxQ9QzRCv"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"☝️ Click the Dashboard link above.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oP7bRL675q"}],"key":"RrsbjPevPq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"👈 Or click the “Search” 🔍 button in the dask-labextension dashboard.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WCHilkZXFb"}],"key":"HKQJplLFEb"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Dask DataFrame ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lUaPpylnE6"},{"type":"inlineCode","value":"read_csv","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Z6ZQYopYc2"},{"type":"text","value":" to read multiple files","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eUfaFwj6AE"}],"identifier":"dask-dataframe-read-csv-to-read-multiple-files","label":"Dask DataFrame read_csv to read multiple files","html_id":"dask-dataframe-read-csv-to-read-multiple-files","implicit":true,"key":"XXqbA6yYRA"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"dask.dataframe.read_csv","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sGfElp2Q9A"},{"type":"text","value":" function can be used in conjunction with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zQL7kjw41U"},{"type":"inlineCode","value":"glob","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"f9zNgTIgSd"},{"type":"text","value":" to read multiple csv files at the same time.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"BxFJUCNLEw"}],"key":"kGES7i00Bx"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Remember we can read one file with ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"zVtdBJq7OS"},{"type":"inlineCode","value":"pandas.read_csv","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hEaNiRViNn"},{"type":"text","value":". For reading multiple files with pandas, we have to concatenate them with ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"tEEbdvkBk7"},{"type":"inlineCode","value":"pd.concatenate","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"u4wvBAfApO"},{"type":"text","value":". However, we can read many files at once just using ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"zAPLGDDV5m"},{"type":"inlineCode","value":"dask.dataframe.read_csv","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XQ4CkETI8y"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BZ5RdDCHJ4"}],"key":"WcCMoypNNG"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Overall, Dask is designed to perform I/O in parallel and is more performant than pandas for operations with multiple files or large files.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"soouy4mhzn"}],"key":"gU1diR1mqi"}],"key":"xz7o1NKC2W"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nimport dask\nimport dask.dataframe as dd\n\nddf = dd.read_csv(co_sites, parse_dates=['DATE'])\nddf","key":"yUBFGT0pSK"},{"type":"output","id":"qacBPmp2cRp2FMaT86gbV","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 710 ms, sys: 87.5 ms, total: 798 ms\nWall time: 1.24 s\n"},{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"Dask DataFrame Structure:\n                          DATE      ID   YEAR  MONTH    DAY     TMAX TMAX_FLAGS     TMIN TMIN_FLAGS     PRCP PRCP_FLAGS     SNOW SNOW_FLAGS     SNWD SNWD_FLAGS     WT18 WT18_FLAGS     TOBS TOBS_FLAGS     WT01 WT01_FLAGS     WT03 WT03_FLAGS     WT04 WT04_FLAGS     WT08 WT08_FLAGS     WT05 WT05_FLAGS     WT07 WT07_FLAGS     WT11 WT11_FLAGS     WT06 WT06_FLAGS     WT09 WT09_FLAGS     WT14 WT14_FLAGS     DAPR DAPR_FLAGS     MDPR MDPR_FLAGS     DASF DASF_FLAGS     MDSF MDSF_FLAGS LATITUDE LONGITUDE ELEVATION   STATE STATION\nnpartitionsn                datetime64[ns]  string  int64  int64  int64  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64     string  float64   float64   float64  string  string\n                           ...     ...    ...    ...    ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...       ...       ...     ...     ...\n...                        ...     ...    ...    ...    ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...        ...      ...       ...       ...     ...     ...\nnnDask Name: to_string_dtype, 2 expressions\nExpr=ArrowStringConversion(frame=FromMapProjectable(8f3b506))","content_type":"text/plain"},"text/html":{"content":"<div><strong>Dask DataFrame Structure:</strong></div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DATE</th>\n      <th>ID</th>\n      <th>YEAR</th>\n      <th>MONTH</th>\n      <th>DAY</th>\n      <th>TMAX</th>\n      <th>TMAX_FLAGS</th>\n      <th>TMIN</th>\n      <th>TMIN_FLAGS</th>\n      <th>PRCP</th>\n      <th>PRCP_FLAGS</th>\n      <th>SNOW</th>\n      <th>SNOW_FLAGS</th>\n      <th>SNWD</th>\n      <th>SNWD_FLAGS</th>\n      <th>WT18</th>\n      <th>WT18_FLAGS</th>\n      <th>TOBS</th>\n      <th>TOBS_FLAGS</th>\n      <th>WT01</th>\n      <th>WT01_FLAGS</th>\n      <th>WT03</th>\n      <th>WT03_FLAGS</th>\n      <th>WT04</th>\n      <th>WT04_FLAGS</th>\n      <th>WT08</th>\n      <th>WT08_FLAGS</th>\n      <th>WT05</th>\n      <th>WT05_FLAGS</th>\n      <th>WT07</th>\n      <th>WT07_FLAGS</th>\n      <th>WT11</th>\n      <th>WT11_FLAGS</th>\n      <th>WT06</th>\n      <th>WT06_FLAGS</th>\n      <th>WT09</th>\n      <th>WT09_FLAGS</th>\n      <th>WT14</th>\n      <th>WT14_FLAGS</th>\n      <th>DAPR</th>\n      <th>DAPR_FLAGS</th>\n      <th>MDPR</th>\n      <th>MDPR_FLAGS</th>\n      <th>DASF</th>\n      <th>DASF_FLAGS</th>\n      <th>MDSF</th>\n      <th>MDSF_FLAGS</th>\n      <th>LATITUDE</th>\n      <th>LONGITUDE</th>\n      <th>ELEVATION</th>\n      <th>STATE</th>\n      <th>STATION</th>\n    </tr>\n    <tr>\n      <th>npartitions=33</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th></th>\n      <td>datetime64[ns]</td>\n      <td>string</td>\n      <td>int64</td>\n      <td>int64</td>\n      <td>int64</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>float64</td>\n      <td>float64</td>\n      <td>float64</td>\n      <td>string</td>\n      <td>string</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th></th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n  </tbody>\n</table>\n<div>Dask Name: to_string_dtype, 2 expressions</div>","content_type":"text/html"}}}],"key":"QwjgJdr06T"}],"key":"xb9TGoihQT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ddf.TMAX.mean()","key":"c4cSBq62vS"},{"type":"output","id":"9RipP4KkhB3zQazEnL0yF","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"<dask_expr.expr.Scalar: expr=ArrowStringConversion(frame=FromMapProjectable(8f3b506))['TMAX'].mean(), dtype=float64>","content_type":"text/plain"}}}],"key":"xhf17Rx2JA"}],"key":"TkHgBQTwrI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that the representation of the DataFrame object contains no data just headers and datatypes.  Why?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Cud2TCdr59"}],"key":"fOWj79cTFx"}],"key":"bQuKyBZlXC"},{"type":"heading","depth":4,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Lazy Evaluation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kuIupY0DKU"}],"identifier":"lazy-evaluation","label":"Lazy Evaluation","html_id":"lazy-evaluation","implicit":true,"key":"Od2IDxEQyC"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Similar to Dask Arrays, Dask DataFrames are lazy. Here the data has not yet been read into the dataframe yet (a.k.a. lazy evaluation).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fGxTA0CrOv"},{"type":"break","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uQ7sjesUQ7"},{"type":"text","value":"Dask just construct the task graph of the computation but it will “evaluate” them only when necessary.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OqtOYb4dlM"}],"key":"iN45tAJqId"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"So how does Dask know the name and dtype of each column?","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ru9ENhAsYa"}],"key":"Sn3FlFZv5W"}],"key":"GXtX5NLU26"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Dask has just read the start of the first file and infers the column names and dtypes.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"H0qh0LQkqn"}],"key":"ydcB5juFZO"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Unlike ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"cxTIq0rqMb"},{"type":"inlineCode","value":"pandas.read_csv","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"dqNxfANSBH"},{"type":"text","value":" that reads in all files before inferring data types, ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"ZoFIgPfPII"},{"type":"inlineCode","value":"dask.dataframe.read_csv","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"ywfXQEDgVf"},{"type":"text","value":" only reads in a sample from the beginning of the file (or first file if using a glob). The column names and dtypes are then enforced when reading the specific partitions (","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gtNd4JBIBW"},{"type":"emphasis","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Dask can make mistakes on these inferences if there is missing or misleading data in the early rows","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"vbDWuBImhB"}],"key":"PmjxJGvYtR"},{"type":"text","value":").","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"C1XJ2KNTq5"}],"key":"lnbbqQbCED"}],"key":"lKHo5pocIk"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s take a look at the start of our dataframe:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZMcREO8LB4"}],"key":"R1VyRHJO6P"}],"key":"NMweN2k9Wr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ddf.head()","key":"jSwnHktgIR"},{"type":"output","id":"g3JYvQZuS2G3wgsuIEp57","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"        DATE           ID  YEAR  MONTH  DAY   TMAX TMAX_FLAGS   TMIN  \\\n0 1893-01-01  USC00113335  1893      1    1  -17.0        XX6  -72.0   \n1 1893-01-02  USC00113335  1893      1    2  -50.0        XX6 -172.0   \n2 1893-01-03  USC00113335  1893      1    3 -122.0        XX6 -244.0   \n3 1893-01-04  USC00113335  1893      1    4  -72.0        XX6 -139.0   \n4 1893-01-05  USC00113335  1893      1    5  -50.0        XX6 -172.0   \n\n  TMIN_FLAGS  PRCP  ... MDPR_FLAGS  DASF DASF_FLAGS  MDSF MDSF_FLAGS  \\\n0        XX6   0.0  ...        XXX   NaN        XXX   NaN        XXX   \n1        XX6   0.0  ...        XXX   NaN        XXX   NaN        XXX   \n2        XX6   3.0  ...        XXX   NaN        XXX   NaN        XXX   \n3        XX6  23.0  ...        XXX   NaN        XXX   NaN        XXX   \n4        XX6   0.0  ...        XXX   NaN        XXX   NaN        XXX   \n\n   LATITUDE LONGITUDE  ELEVATION STATE  STATION  \n0   41.1739   -90.035      246.9    IL    GALVA  \n1   41.1739   -90.035      246.9    IL    GALVA  \n2   41.1739   -90.035      246.9    IL    GALVA  \n3   41.1739   -90.035      246.9    IL    GALVA  \n4   41.1739   -90.035      246.9    IL    GALVA  \n\n[5 rows x 52 columns]","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DATE</th>\n      <th>ID</th>\n      <th>YEAR</th>\n      <th>MONTH</th>\n      <th>DAY</th>\n      <th>TMAX</th>\n      <th>TMAX_FLAGS</th>\n      <th>TMIN</th>\n      <th>TMIN_FLAGS</th>\n      <th>PRCP</th>\n      <th>...</th>\n      <th>MDPR_FLAGS</th>\n      <th>DASF</th>\n      <th>DASF_FLAGS</th>\n      <th>MDSF</th>\n      <th>MDSF_FLAGS</th>\n      <th>LATITUDE</th>\n      <th>LONGITUDE</th>\n      <th>ELEVATION</th>\n      <th>STATE</th>\n      <th>STATION</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1893-01-01</td>\n      <td>USC00113335</td>\n      <td>1893</td>\n      <td>1</td>\n      <td>1</td>\n      <td>-17.0</td>\n      <td>XX6</td>\n      <td>-72.0</td>\n      <td>XX6</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>41.1739</td>\n      <td>-90.035</td>\n      <td>246.9</td>\n      <td>IL</td>\n      <td>GALVA</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1893-01-02</td>\n      <td>USC00113335</td>\n      <td>1893</td>\n      <td>1</td>\n      <td>2</td>\n      <td>-50.0</td>\n      <td>XX6</td>\n      <td>-172.0</td>\n      <td>XX6</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>41.1739</td>\n      <td>-90.035</td>\n      <td>246.9</td>\n      <td>IL</td>\n      <td>GALVA</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1893-01-03</td>\n      <td>USC00113335</td>\n      <td>1893</td>\n      <td>1</td>\n      <td>3</td>\n      <td>-122.0</td>\n      <td>XX6</td>\n      <td>-244.0</td>\n      <td>XX6</td>\n      <td>3.0</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>41.1739</td>\n      <td>-90.035</td>\n      <td>246.9</td>\n      <td>IL</td>\n      <td>GALVA</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1893-01-04</td>\n      <td>USC00113335</td>\n      <td>1893</td>\n      <td>1</td>\n      <td>4</td>\n      <td>-72.0</td>\n      <td>XX6</td>\n      <td>-139.0</td>\n      <td>XX6</td>\n      <td>23.0</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>41.1739</td>\n      <td>-90.035</td>\n      <td>246.9</td>\n      <td>IL</td>\n      <td>GALVA</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1893-01-05</td>\n      <td>USC00113335</td>\n      <td>1893</td>\n      <td>1</td>\n      <td>5</td>\n      <td>-50.0</td>\n      <td>XX6</td>\n      <td>-172.0</td>\n      <td>XX6</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>NaN</td>\n      <td>XXX</td>\n      <td>41.1739</td>\n      <td>-90.035</td>\n      <td>246.9</td>\n      <td>IL</td>\n      <td>GALVA</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 52 columns</p>\n</div>","content_type":"text/html"}}}],"key":"BlHBIVcNbC"}],"key":"YPAmQS8mnW"},{"type":"block","kind":"notebook-content","children":[{"type":"div","class":"alert alert-block alert-info","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"NOTE:","key":"FrEf2RrGbC"}],"key":"LoccwrC5yJ"},{"type":"text","value":" Whenever we operate on our dataframe we read through all of our CSV data so that we don’t fill up RAM. Dask will delete intermediate results (like the full pandas DataFrame for each file) as soon as possible. This enables you to handle larger than memory datasets but, repeated computations will have to load all of the data in each time.","key":"UbNmfqOmBL"}],"key":"Xgr1xayjzJ"}],"key":"rxaLxtJ7uv"}],"key":"t01I9QQ0Mn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Similar data manipulations as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FsbOSoPdff"},{"type":"inlineCode","value":"pandas.dataframe","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t4LkXCYT2Z"},{"type":"text","value":" can be done for ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XkzHQBm6AE"},{"type":"inlineCode","value":"dask.dataframes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lxyXgRrete"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vg5B9mgchA"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rii4RgFZki"},{"type":"text","value":"For example, let’s find the highest number of snow days in Colorado:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y5bkk4x9If"}],"key":"lOvawf36I3"}],"key":"nY0zKS0j9H"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nprint ('This site has the highest number of snow days in a year : ')\nsnowy_days = ddf[ddf['SNOW']>0].groupby(['ID','YEAR']).size()\nsnowy_days.compute().agg(['idxmax','max'])","key":"D4Z02pzoTy"},{"type":"output","id":"FMi41LuIM6_krRdXnfH_z","data":[{"output_type":"stream","name":"stdout","text":"This site has the highest number of snow days in a year : \n"},{"output_type":"stream","name":"stdout","text":"CPU times: user 666 ms, sys: 108 ms, total: 774 ms\nWall time: 6.53 s\n"},{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"idxmax    (USC00114823, 2009)\nmax                        97\ndtype: object","content_type":"text/plain"}}}],"key":"x2DC7XIU9J"}],"key":"TOR6QkwGl4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Nice, but what did Dask do?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R5y4m8WIPe"}],"identifier":"nice-but-what-did-dask-do","label":"Nice, but what did Dask do?","html_id":"nice-but-what-did-dask-do","implicit":true,"key":"ZKmSPdG0zV"}],"key":"aeGqelsiWt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Requires ipywidgets\n\nsnowy_days.dask","key":"XdaYGbDJpL"},{"type":"output","id":"AHT4ruIKfbeig9igYsuzi","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content_type":"text/plain","hash":"0418864089c6356aaf9b08f29a810743","path":"/dask-cookbook/build/0418864089c6356aaf9b08f29a810743.txt"}}}],"key":"ipjyEtAeQV"}],"key":"VaZV4OcF5C"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can also view the underlying task graph using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qnjdbzOKHc"},{"type":"inlineCode","value":".visualize()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ox6vjQq27Q"},{"type":"text","value":":","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UCQ4uKEBob"}],"key":"Cs8bd3sdXu"}],"key":"tSbmxwIG1j"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#graph is too large\nsnowy_days.visualize()","key":"cVLgrE1Icg"},{"type":"output","id":"O4tkiPo2yCGx1fuSVaEPV","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 13.0.1 (20250616.1512)\n -->\n<!-- Pages: 1 -->\n<svg width=\"582pt\" height=\"404pt\"\n viewBox=\"0.00 0.00 582.00 404.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 400)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-400 577.75,-400 577.75,4 -4,4\"/>\n<!-- 320184997146484882 -->\n<g id=\"node1\" class=\"node\">\n<title>320184997146484882</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"232.75,-396 113.25,-396 113.25,-360 232.75,-360 232.75,-396\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"173\" y=\"-371\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">Size(Filter)</text>\n</g>\n<!-- 5861820079360099879 -->\n<g id=\"node2\" class=\"node\">\n<title>5861820079360099879</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"346,-324 0,-324 0,-288 346,-288 346,-324\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"173\" y=\"-299\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">Filter(ArrowStringConversion, GT)</text>\n</g>\n<!-- 5861820079360099879&#45;&gt;320184997146484882 -->\n<g id=\"edge1\" class=\"edge\">\n<title>5861820079360099879&#45;&gt;320184997146484882</title>\n<path fill=\"none\" stroke=\"black\" d=\"M173,-324.3C173,-331.59 173,-340.27 173,-348.46\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"169.5,-348.38 173,-358.38 176.5,-348.38 169.5,-348.38\"/>\n</g>\n<!-- 8912851347188828877 -->\n<g id=\"node3\" class=\"node\">\n<title>8912851347188828877</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"385.12,-252 204.88,-252 204.88,-216 385.12,-216 385.12,-252\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"295\" y=\"-227\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">GT(Projection, 0)</text>\n</g>\n<!-- 8912851347188828877&#45;&gt;5861820079360099879 -->\n<g id=\"edge3\" class=\"edge\">\n<title>8912851347188828877&#45;&gt;5861820079360099879</title>\n<path fill=\"none\" stroke=\"black\" d=\"M264.53,-252.48C248.84,-261.49 229.51,-272.58 212.67,-282.24\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"211.33,-278.97 204.4,-286.99 214.81,-285.05 211.33,-278.97\"/>\n</g>\n<!-- 6812962073597553244 -->\n<g id=\"node4\" class=\"node\">\n<title>6812962073597553244</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"573.75,-180 142.25,-180 142.25,-144 573.75,-144 573.75,-180\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"358\" y=\"-155\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">Projection(ArrowStringConversion, SNOW)</text>\n</g>\n<!-- 6812962073597553244&#45;&gt;8912851347188828877 -->\n<g id=\"edge4\" class=\"edge\">\n<title>6812962073597553244&#45;&gt;8912851347188828877</title>\n<path fill=\"none\" stroke=\"black\" d=\"M342.43,-180.3C335.03,-188.53 326.03,-198.52 317.88,-207.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"315.49,-205 311.41,-214.77 320.7,-209.68 315.49,-205\"/>\n</g>\n<!-- &#45;1458386530278902637 -->\n<g id=\"node5\" class=\"node\">\n<title>&#45;1458386530278902637</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"465.62,-108 6.38,-108 6.38,-72 465.62,-72 465.62,-108\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"236\" y=\"-83\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">ArrowStringConversion(FromMapProjectable)</text>\n</g>\n<!-- &#45;1458386530278902637&#45;&gt;5861820079360099879 -->\n<g id=\"edge2\" class=\"edge\">\n<title>&#45;1458386530278902637&#45;&gt;5861820079360099879</title>\n<path fill=\"none\" stroke=\"black\" d=\"M176.29,-108.42C159.35,-116.43 142.85,-127.86 133,-144 107.17,-186.34 134.18,-244.56 154.64,-278.14\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"151.59,-279.88 159.9,-286.45 157.51,-276.13 151.59,-279.88\"/>\n</g>\n<!-- &#45;1458386530278902637&#45;&gt;6812962073597553244 -->\n<g id=\"edge5\" class=\"edge\">\n<title>&#45;1458386530278902637&#45;&gt;6812962073597553244</title>\n<path fill=\"none\" stroke=\"black\" d=\"M266.47,-108.48C282.16,-117.49 301.49,-128.58 318.33,-138.24\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"316.19,-141.05 326.6,-142.99 319.67,-134.97 316.19,-141.05\"/>\n</g>\n<!-- &#45;6757703625948047205 -->\n<g id=\"node6\" class=\"node\">\n<title>&#45;6757703625948047205</title>\n<polygon fill=\"none\" stroke=\"black\" points=\"344.12,-36 127.88,-36 127.88,0 344.12,0 344.12,-36\"/>\n<text xml:space=\"preserve\" text-anchor=\"middle\" x=\"236\" y=\"-11\" font-family=\"Helvetica,sans-Serif\" font-size=\"20.00\">FromMapProjectable</text>\n</g>\n<!-- &#45;6757703625948047205&#45;&gt;&#45;1458386530278902637 -->\n<g id=\"edge6\" class=\"edge\">\n<title>&#45;6757703625948047205&#45;&gt;&#45;1458386530278902637</title>\n<path fill=\"none\" stroke=\"black\" d=\"M236,-36.3C236,-43.59 236,-52.27 236,-60.46\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"232.5,-60.38 236,-70.38 239.5,-60.38 232.5,-60.38\"/>\n</g>\n</g>\n</svg>\n","content_type":"image/svg+xml"},"text/plain":{"content":"<graphviz.graphs.Digraph at 0x7f207c5e9e80>","content_type":"text/plain"}}}],"key":"bnHZhbZNq6"}],"key":"wObI8Xxkca"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KBw8iX43aO"},{"type":"inlineCode","value":".compute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Eq9G5fFv1c"},{"type":"text","value":" wisely!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E625AHfk8i"}],"identifier":"use-compute-wisely","label":"Use .compute wisely!","html_id":"use-compute-wisely","implicit":true,"key":"b8M11o9MDT"},{"type":"heading","depth":4,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Share intermediate results","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gOYw5OO0Tw"}],"identifier":"share-intermediate-results","label":"Share intermediate results","html_id":"share-intermediate-results","implicit":true,"key":"TSeIyLGz1O"}],"key":"UN0t2SdE3Y"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For most operations, ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fWtG2ttQQM"},{"type":"inlineCode","value":"dask.dataframe","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dUcWV8cOoJ"},{"type":"text","value":" hashes the arguments, allowing duplicate computations to be shared, and only computed once.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sf6z1GCxfO"}],"key":"Pbgn5IK3Ss"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For example, let’s compute the mean and standard deviation for Maximum daily temperature of all snow days.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Rp6Hzkqcjl"}],"key":"dsaESOrTVQ"}],"key":"Nkxq13rK3y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"snowy_days = ddf[ddf['SNOW']>0]\nmean_tmax = snowy_days.TMAX.mean()\nstd_tmax = snowy_days.TMAX.std()","key":"FOuyUIt6M8"},{"type":"output","id":"mKtzMBdyVHV2e9k0uJjsP","data":[],"key":"eJw5oEyP7A"}],"key":"p4sf4Ugx0X"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\nmean_tmax_result = mean_tmax.compute()\nstd_tmax_result = std_tmax.compute()","key":"Lc6nkGGokJ"},{"type":"output","id":"1tbevRrRovPngi_YqwzcM","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 602 ms, sys: 83.9 ms, total: 686 ms\nWall time: 6.33 s\n"}],"key":"RY4SasL6AA"}],"key":"hKGsnbvQVP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"But if we pass both arguments in a single ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D4Z4SlobpE"},{"type":"inlineCode","value":".compute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u686NbozBA"},{"type":"text","value":", we can share the intermediate results:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Llmg5vvE6m"}],"key":"sGoYc4eTtj"}],"key":"b5I2SGSlUU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\nmean_tmax_result, std_tmax_result = dask.compute(mean_tmax, std_tmax)","key":"dCjkOE2ovd"},{"type":"output","id":"Jbun3sMWHGuMERDDti3Yt","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 394 ms, sys: 53.9 ms, total: 448 ms\nWall time: 4.79 s\n"}],"key":"f2MgFq8sHu"}],"key":"UDH2McT7xX"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rMcnKS2V4h"},{"type":"inlineCode","value":"dask.compute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m0L3wCczYP"},{"type":"text","value":" only one allowed sharing intermediate results between TMAX mean and median calculations and improved total performance.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jmKV5utEe4"}],"key":"RLkABP5Ss8"}],"key":"T5FwZIjgyQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"mean_tmax.dask","key":"VS3j0Ro0t6"},{"type":"output","id":"aEqsj0LwB3QdjJFPNwczZ","data":[{"output_type":"execute_result","execution_count":27,"metadata":{},"data":{"text/plain":{"content_type":"text/plain","hash":"389b784c690bf841358cf26df89e643d","path":"/dask-cookbook/build/389b784c690bf841358cf26df89e643d.txt"}}}],"key":"BVd0qA0QJq"}],"key":"WBG6eIW6L3"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here some operations such as the calls to read the csv files, the filtering, and the grouping is exactly similar between both operations, so they can share intermediate results. Remember, Dask will delete intermediate results (like the full pandas DataFrame for each file) as soon as possible.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fXIghDzL4U"}],"key":"mOHpCkzyZt"}],"key":"n8ZABKFyuk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":".persist","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KmV2BxqS0f"},{"type":"text","value":" or caching","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RZP6WgV6Rk"}],"identifier":"id-persist-or-caching","label":".persist or caching","html_id":"id-persist-or-caching","implicit":true,"key":"oHw5DoyjXM"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Sometimes you might want your computers to keep intermediate results in memory, if it fits in the memory.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Pd4TOlHX1R"}],"key":"YTjfb0XU2i"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CplrvViWlr"},{"type":"inlineCode","value":".persist()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oXzdxkfTtY"},{"type":"text","value":" method can be used to  “cache” data and tell Dask what results to keep around. You should only use ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"X3agHgdpKN"},{"type":"inlineCode","value":".persist()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QRIwlpeLgl"},{"type":"text","value":" with any data or computation that fits in memory.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"syBBPgJihc"}],"key":"Uc56TaNIIP"}],"key":"zm5V2lrvnD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For example, if we want to only do analysis on a subset of data (for example snow days at Boulder site):","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cO7p7DCjUD"}],"key":"K8HrFXxwoK"}],"key":"RY64dHG4o0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"boulder_snow = ddf[(ddf['SNOW']>0)&(ddf['ID']=='USC00050848')]","key":"xpPaIUDXfl"},{"type":"output","id":"l36cJFnDQEePJTMvYG44L","data":[],"key":"MpFdyhuNmC"}],"key":"p7z2LTpkbT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\ntmax = boulder_snow.TMAX.mean().compute()\ntmin = boulder_snow.TMIN.mean().compute()\n\nprint (tmin, tmax)","key":"QRqcPur7gq"},{"type":"output","id":"7Nb5tKwJMbxbCiis1QeeR","data":[{"output_type":"stream","name":"stdout","text":"nan nan\nCPU times: user 836 ms, sys: 113 ms, total: 949 ms\nWall time: 9.85 s\n"}],"key":"sKiBbjZ7pE"}],"key":"tBQV8B2eVD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"boulder_snow = ddf[(ddf['SNOW']>0)&(ddf['ID']=='USC00050848')].persist()","key":"GDFXGjamce"},{"type":"output","id":"RaKOumTS7yfuPscOU_t1_","data":[],"key":"bybhm6nZDQ"}],"key":"WzaM57Nqpi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\ntmax = boulder_snow.TMAX.mean().compute()\ntmin = boulder_snow.TMIN.mean().compute()\nprint (tmin, tmax)","key":"vQqFSWH1vw"},{"type":"output","id":"c2UaMGnnXn-cTh5U65rQ6","data":[{"output_type":"stream","name":"stdout","text":"nan nan\nCPU times: user 355 ms, sys: 51.6 ms, total: 407 ms\nWall time: 4.3 s\n"}],"key":"EKpxhA64Ey"}],"key":"cAuQVqQlCw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As you can see the analysis on this persisted data is much faster because we are not repeating the loading and selecting.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aUpm4Eegia"}],"key":"WOlUsXQkHc"}],"key":"Fn2Y0mFVVD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask DataFrames Best Practices","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sDFUm2q0Ud"}],"identifier":"dask-dataframes-best-practices","label":"Dask DataFrames Best Practices","html_id":"dask-dataframes-best-practices","implicit":true,"key":"sPApVmyxUc"},{"type":"heading","depth":3,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Use pandas (when you can)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tOWeRXJPch"}],"identifier":"use-pandas-when-you-can","label":"Use pandas (when you can)","html_id":"use-pandas-when-you-can","implicit":true,"key":"owGkmCsFki"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For data that fits into RAM, pandas can often be easier and more efficient to use than Dask DataFrame. However, Dask DataFrame is a powerful tool for larger-than-memory datasets.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wEze1Wj9Ng"}],"key":"hnNy3KsljP"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"When the data is still larger than memory, Dask DataFrame can be used to ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BkS94icTSl"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"reduce","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Y0npik53gi"}],"key":"bxwGggsO9j"},{"type":"text","value":" the larger datasets to a manageable level that pandas can handle. Next, use pandas at that point.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"e4aGj48l6s"}],"key":"pgJgCbjACk"},{"type":"heading","depth":3,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Avoid Full-Data Shuffling","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TfAegV5tir"}],"identifier":"avoid-full-data-shuffling","label":"Avoid Full-Data Shuffling","html_id":"avoid-full-data-shuffling","implicit":true,"key":"nBHzPdkajW"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Some operations are more expensive to compute in a parallel setting than if they are in-memory on a single machine (for example, ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"aks5VodXAZ"},{"type":"inlineCode","value":"set_index","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jva53PiTS5"},{"type":"text","value":" or ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"usWXoFzOEG"},{"type":"inlineCode","value":"merge","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"U5P3PDrxpv"},{"type":"text","value":"). In particular, ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PMUeduxuW5"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"shuffling","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CRBRMHBuss"}],"key":"EGTmRtQDKg"},{"type":"text","value":" operations that rearrange data can become very communication intensive.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wVfQTxMCpF"}],"key":"PyPXQoUK18"},{"type":"heading","depth":3,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"pandas performance tips","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gLwQBCEf66"}],"identifier":"pandas-performance-tips","label":"pandas performance tips","html_id":"pandas-performance-tips","implicit":true,"key":"kaVUq25QN1"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"pandas performance tips such as using vectorized operations also apply to Dask DataFrames. See ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"yWu8ikLWd3"},{"type":"link","url":"https://github.com/TomAugspurger/effective-pandas/blob/master/modern_1_intro.ipynb","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Modern Pandas notebook","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"inS1KGDV34"}],"urlSource":"https://github.com/TomAugspurger/effective-pandas/blob/master/modern_1_intro.ipynb","data":{"kind":"file","org":"TomAugspurger","repo":"effective-pandas","reference":"master","file":"modern_1_intro.ipynb","raw":"https://raw.githubusercontent.com/TomAugspurger/effective-pandas/master/modern_1_intro.ipynb"},"internal":false,"protocol":"github","key":"Tepe7qLPnI"},{"type":"text","value":" for more tips on better performance with pandas.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"RH3bxqezI3"}],"key":"eqn7WOHUP4"},{"type":"heading","depth":3,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Check Partition Size","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"TznrFynshn"}],"identifier":"check-partition-size","label":"Check Partition Size","html_id":"check-partition-size","implicit":true,"key":"AUBcDqxNyg"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Similar to chunks, partitions should be small enough that they fit in the memory, but large enough to avoid that the communication overhead.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ls4wER225t"}],"key":"rYoxzRGR0M"},{"type":"heading","depth":4,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"inlineCode","value":"blocksize","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"xt482Qt91Y"}],"identifier":"blocksize","label":"blocksize","html_id":"blocksize","implicit":true,"key":"Qand0e9ciy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":23,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"text","value":"The number of partitions can be set using the ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"xvMWRW8rym"},{"type":"inlineCode","value":"blocksize","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"ugtOMwGKDD"},{"type":"text","value":" argument.\nIf none is given, the number of partitions/blocksize is calculated depending on the available memory and the number of cores on a machine up to a max of 64 MB. As we increase the blocksize, the number of partitions (calculated by Dask) will decrease. This is especially important when reading one large csv file.","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"iw2mknWiRs"}],"key":"gGO5s4zD68"}],"key":"Q5Frb3BoHV"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"strong","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"As a good rule of thumb, you should aim for partitions that have around 100MB of data each.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"nDfK1lFMgp"}],"key":"mHnBAcjPEy"}],"key":"II7vGKtb3y"},{"type":"heading","depth":3,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Smart use of ","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"Cm9AAt9hra"},{"type":"inlineCode","value":".compute()","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"nrcGRYPAiR"}],"identifier":"smart-use-of-compute","label":"Smart use of .compute()","html_id":"smart-use-of-compute","implicit":true,"key":"t0UWuzjXNs"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Try avoiding running ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"K6HXz6UlXG"},{"type":"inlineCode","value":".compute()","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"wy9FBum96e"},{"type":"text","value":" operation as long as possible. Dask works best when users avoid computation until results are needed. The ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"YVOcRfWVgq"},{"type":"inlineCode","value":".compute()","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"TkR9sWKqEd"},{"type":"text","value":" command informs Dask to trigger computations on the Dask DataFrame.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"zToEOgGxRO"},{"type":"break","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"A0poH9E4RF"},{"type":"text","value":"As shown in the above example, the intermediate results can also be shared by calling ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"JwvuZch7Ny"},{"type":"inlineCode","value":".compute()","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"RDWLgjJ1FR"},{"type":"text","value":" only once.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"yBTDMJ743r"}],"key":"pYBWtBNXtg"}],"key":"kVrnbkeLNe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Close your local Dask Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NsEadKQ2En"}],"identifier":"close-your-local-dask-cluster","label":"Close your local Dask Cluster","html_id":"close-your-local-dask-cluster","implicit":true,"key":"CSXjAqsbNI"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"It is always a good practice to close the Dask cluster you created.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vXV8EcRy2a"}],"key":"n4CcJbKOyk"}],"key":"rIhfs87dhw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client.shutdown()","key":"CacYgtYwbi"},{"type":"output","id":"wqCVrGBDU_TDxF7UKB54n","data":[],"key":"i1BpALRreA"}],"key":"PAJ3RTXWS5"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QM6TXWfcoF"}],"key":"PalDlXB6cr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rEpsVDNrBt"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"cxdXgzrv6g"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this notebook, we have learned about:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qjvPtfZnXX"}],"key":"Sjo3zjZRGL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Dask DataFrame concept and component.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AGFIsO2LOC"}],"key":"CSpPcfJAnw"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"When to use and when to avoid Dask DataFrames?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rbq9mmcisC"}],"key":"f9RWO8CKrF"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"How to use Dask DataFrame?","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"URnBkvA9Fx"}],"key":"EpP5snimlm"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Some best practices around Dask DataFrames.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"bv94mqUHtX"}],"key":"bN4QXO3tai"}],"key":"dVrJH16gfI"},{"type":"heading","depth":2,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"x9uQWrDKCJ"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"H8WWfTzaK7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Reference","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"KPhuuQCkqe"}],"key":"xKs4Oc6tFf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"link","url":"https://dask.org/","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Dask Docs","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"uy9vmsRTpb"}],"urlSource":"https://dask.org/","key":"fNm5qEz1Iu"}],"key":"HkDGSwJqz4"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"link","url":"https://examples.dask.org/","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Dask Examples","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"zdqLrwRt5K"}],"urlSource":"https://examples.dask.org/","key":"dd5YKXLWRD"}],"key":"Y5gS6KE0iI"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"link","url":"https://github.com/dask/dask/","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Dask Code","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"zqndZHm62k"}],"urlSource":"https://github.com/dask/dask/","error":true,"key":"UPoRk0XiOj"}],"key":"cYInM2hVyC"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"link","url":"https://blog.dask.org/","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Dask Blog","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"KbjBrJuADH"}],"urlSource":"https://blog.dask.org/","key":"tD82mESTIn"}],"key":"raO1afCCaS"},{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"https://pandas.pydata.org/docs/","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Pandas Docs","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"gNPYSYgsMi"}],"urlSource":"https://pandas.pydata.org/docs/","key":"whsmz7gItb"}],"key":"XsbKbyBQXs"}],"key":"LA8hsAS4JA"}],"key":"OkoNEJodkg"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Ask for help","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"M9TZ0WGN1H"}],"key":"wxyyDljvJg"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"http://stackoverflow.com/questions/tagged/dask","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"inlineCode","value":"dask","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"fm1zjZTsnm"}],"urlSource":"http://stackoverflow.com/questions/tagged/dask","key":"oLdhqR191U"},{"type":"text","value":" tag on Stack Overflow, for usage questions","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"gu4EUvXU1b"}],"key":"m7ph9Ve1vC"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"link","url":"https://github.com/dask/dask/discussions","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"github discussions: dask","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"PL9g8ycdIs"}],"urlSource":"https://github.com/dask/dask/discussions","error":true,"key":"pAKwv0GLXA"},{"type":"text","value":" for general, non-bug, discussion, and usage questions","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"LvYs9w64me"}],"key":"NuyD39cFbu"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"link","url":"https://github.com/dask/dask/issues/new","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"github issues: dask","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"kLdZUWoMm7"}],"urlSource":"https://github.com/dask/dask/issues/new","error":true,"key":"EhjfqenFMT"},{"type":"text","value":" for bug reports and feature requests","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"xVy1ck7BHw"}],"key":"M0PhyqHv1f"}],"key":"K4GXCdxfIx"}],"key":"aNuafCmqHR"}],"key":"yMyI1ey0PP"}],"key":"nrhEAnztd6"}],"key":"wsOiRwIESk"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dask Array","url":"/notebooks/dask-array","group":"Introductions to Dask"},"next":{"title":"Dask Schedulers","url":"/notebooks/dask-cluster","group":"Dask Schedulers"}}},"domain":"http://localhost:3000"}