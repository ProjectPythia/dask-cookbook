{"version":2,"kind":"Notebook","sha256":"1c579c9726c74eccbfca8a4e37043479cbcb580aec0bd577b2367bc8b3d42711","slug":"notebooks.dask-cluster","location":"/notebooks/04-dask-cluster.ipynb","dependencies":[],"frontmatter":{"title":"Dask Schedulers","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Negin Sobhani","given":"Negin","family":"Sobhani"},"name":"Negin Sobhani","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Brian Vanderwende","given":"Brian","family":"Vanderwende"},"name":"Brian Vanderwende","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Deepak Cherian","given":"Deepak","family":"Cherian"},"name":"Deepak Cherian","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Ben Kirk","given":"Ben","family":"Kirk"},"name":"Ben Kirk","id":"contributors-myst-generated-uid-3"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/dask-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/dask-cookbook/blob/main/notebooks/04-dask-cluster.ipynb","thumbnail":"/dask-cookbook/build/efb0893141695015b5a57e9702d22b2e.svg","exports":[{"format":"ipynb","filename":"04-dask-cluster.ipynb","url":"/dask-cookbook/build/04-dask-cluster-54d56af87f395de426442b54a17536cf.ipynb"}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{},"version_major":2,"version_minor":0}},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"image","url":"/dask-cookbook/build/efb0893141695015b5a57e9702d22b2e.svg","alt":"Dask logo","width":"30%","key":"FXJAP4jlj7","urlSource":"https://docs.dask.org/en/stable/_images/dask_horizontal.svg"}],"key":"DcIquR63xS"},{"type":"heading","depth":1,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Dask Schedulers","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ikWGtTAZJc"}],"identifier":"dask-schedulers","label":"Dask Schedulers","html_id":"dask-schedulers","implicit":true,"key":"jamyP9W5pn"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"In this tutorial, you learn:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Hgb3qFFLGr"}],"identifier":"in-this-tutorial-you-learn","label":"In this tutorial, you learn:","html_id":"in-this-tutorial-you-learn","implicit":true,"key":"GU4GcN4cUO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Components of Dask Schedulers","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"oaqWKJoBeX"}],"key":"qgelKW4hav"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Types of Dask Schedulers","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"FpmvlXpwY6"}],"key":"lGaCqhSGkE"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Single Machine Schedulers","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ieu7JGINO6"}],"key":"NYQYm4moOk"}],"key":"ECvJLtiCQ7"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Related Documentation","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"tJwviULW7y"}],"key":"TNBbMUkknY"}],"key":"YrBMAWJ0Pf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/en/stable/scheduling.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Dask Scheduling","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"SkQBNObF1k"}],"urlSource":"https://docs.dask.org/en/stable/scheduling.html","key":"CkJSqpfuvM"}],"key":"R2r9r6jMoS"},{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/en/stable/deploying-python.html","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Dask Local Cluster","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"QJhBkGFueU"}],"urlSource":"https://docs.dask.org/en/stable/deploying-python.html","key":"hv7ODwHnZs"}],"key":"TlW5IBj9iV"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/en/stable/deploying.html","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Deploying Dask Cluster Manager","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"GmFMX6XDJK"}],"urlSource":"https://docs.dask.org/en/stable/deploying.html","key":"yVtjt8ZCEg"}],"key":"gs1eezkkYU"}],"key":"ftM3LTho3j"}],"key":"YGWMjbGn7q"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KI82WUtq7G"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"IjWhEtYM8r"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"As we mentioned in our Dask overview, Dask is composed of two main parts:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"msSrEfru1d"}],"key":"yihBBBDKks"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Dask Collections (APIs)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Io4giLeboW"}],"key":"ceFkw1utc9"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Dynamic Task Scheduling","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VwJrcaofGO"}],"key":"FGl8Y4n3Sr"}],"key":"uKWeV88MyG"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"So far, we have talked about different Dask collections, but in this tutorial we are going to talk more about the second part.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YzQQltMghf"}],"key":"EK4D6ZPw6e"},{"type":"heading","depth":2,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The Dask scheduler - our task orchestrator","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"NXJfaoWPK1"}],"identifier":"the-dask-scheduler-our-task-orchestrator","label":"The Dask scheduler - our task orchestrator","html_id":"the-dask-scheduler-our-task-orchestrator","implicit":true,"key":"i7rvLI6Bud"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gaDUuP5y5r"},{"type":"inlineCode","value":"Dask.distributed","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"cHOqaQuL5z"},{"type":"text","value":" task ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"GZXImmmoCk"},{"type":"emphasis","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"scheduler","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"uL2VKrFPty"}],"key":"RQQMhWpZgK"},{"type":"text","value":" is a centralized, dynamic system that coordinates the efforts of various dask ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"xYcDo9V9eI"},{"type":"emphasis","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"worker","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"jYdQbzdv6R"}],"key":"QbZReJl8kS"},{"type":"text","value":" processes spread accross different machines.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Vko9d0n8Hb"}],"key":"cBbA1nhLtW"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"When a computational task is submitted, the Dask distributed ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"xFeZEmm9LD"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"scheduler","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"TPpPh6ATMP"}],"key":"AfC7Qf2fyF"},{"type":"text","value":" sends it off to a Dask ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"wlY22EOelm"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"cluster","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"dn52mOQa9m"}],"key":"dLAEgAYMOI"},{"type":"text","value":" - simply a collection of Dask ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"yjd5g17zWu"},{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"workers","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"LDW73IF0c1"}],"key":"Ny6W9GZvOI"},{"type":"text","value":". A worker is typically a separate Python process on either the local host or a remote machine.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Ulm8oagZxq"}],"key":"TNBWtYymss"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"To perform work, a scheduler must be assigned resources in the form of a Dask cluster. The cluster consists of the following components:","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"gZYY1lFWMe"}],"key":"mlojod3noX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":18,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"strong","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"scheduler","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"gKiIpAsyrW"}],"key":"v0EdaTEXcb"},{"type":"text","value":" : A scheduler creates and manages task graphs and distributes tasks to workers.","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"CHPMkM47Xm"}],"key":"yUvPTFIxM4"}],"key":"i5OCPDnNmm"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"workers","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"vmcVqA3ab0"}],"key":"ocnHzjKdvc"},{"type":"text","value":" : A worker is typically a separate Python process on either the local host or a remote machine. A Dask ","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"UdpzSi9RYP"},{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"cluster","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"npyHyXOHxF"}],"key":"sJLgqr140Z"},{"type":"text","value":" usually consists of many workers. Basically, a worker is a Python interpretor which will perform work on a subset of our dataset.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"PmicGurUUq"}],"key":"TPWp98UjJv"}],"key":"G2eAtPlCBd"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"client","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"s5qm6N5ETT"}],"key":"xO1jLg42VK"},{"type":"text","value":" - A high-level interface that points to the scheduler (often local but not always). A client serves as the entry point for interacting with a Dask scheduler.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"G3ThpVIeWL"}],"key":"DDzZWCT1YI"}],"key":"nk7bMBEOxm"}],"key":"lExoBj2tFE"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":26,"column":1}},"children":[{"type":"image","url":"/dask-cookbook/build/7445a9f1307deaa4760238b8ed4d85c3.png","alt":"Dask Distributed Cluster","width":"75%","key":"L7azlZIKSN","urlSource":"https://tutorial.dask.org/_images/distributed-overview.png"}],"key":"GNsiAt0b3B"},{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Image credit: Dask Contributors","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"TDsyEf9VJj"}],"key":"oylWbVZfm6"}],"key":"RszBg7h4HL"}],"visibility":"show","key":"Ykmcowtc5O"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Schedulers","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H7jjbDikm4"}],"identifier":"schedulers","label":"Schedulers","html_id":"schedulers","implicit":true,"key":"yI3TWz2sfN"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Dask essentially offers two types of schedulers:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GrFYAGtPVg"}],"key":"eqOx3FJHFQ"},{"type":"image","style":{"verticalAlign":"middle","margin":"30px 0px"},"url":"/dask-cookbook/build/8b6da849318d7659184d63558507155e.svg","alt":"High level collections are used to generate task graphs which can be executed by schedulers on a single machine or a cluster.","width":"75%","key":"EctwOi7a8h","urlSource":"https://docs.dask.org/en/stable/_images/dask-overview.svg"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Image credit: Dask Contributors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JCeH6SvpuZ"}],"key":"BONLOmrAUc"}],"key":"nMcyP0kEIq"},{"type":"heading","depth":3,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"1. Single machine scheduler","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bJ3YvzOdYl"}],"identifier":"id-1-single-machine-scheduler","label":"1. Single machine scheduler","html_id":"id-1-single-machine-scheduler","implicit":true,"key":"pM3XrFno3V"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"The Single-machine Scheduler schedules tasks and manages the execution of those tasks on the same machine where the scheduler is running.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"AFTQyRDdpX"}],"key":"t4LabN6u7y"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"It is designed to be used in situations where the amount of data or the computational requirements are too large for a single process to handle, but not large enough to warrant the use of a cluster of machines.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Znof7jSU1e"}],"key":"fs5CwoMl7v"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"It is relatively simple and cheap to use but it does not scale as it only runs on a single machine.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"PaztV6uQ1U"}],"key":"bPtlH706Tu"}],"key":"dS8Ljt0G15"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Single machine scheduler is the default choice used by Dask.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"fl6hz6WUIu"}],"key":"GIMeXQUlfK"}],"key":"CHNAvTwZER"},{"type":"paragraph","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"In Dask, there are several types of single machine schedulers that can be used to schedule computations on a single machine:","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"WXbT0zl6IH"}],"key":"R7Fv4KLw3z"},{"type":"heading","depth":4,"position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"1.1. Single-threaded scheduler","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"i89BrBcGtR"}],"identifier":"id-1-1-single-threaded-scheduler","label":"1.1. Single-threaded scheduler","html_id":"id-1-1-single-threaded-scheduler","implicit":true,"key":"FJGKAorTTd"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"This scheduler runs all tasks ","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"iYdyv2kUiQ"},{"type":"strong","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"serially","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"osCOARBo1j"}],"key":"myy8qsza9q"},{"type":"text","value":" on a single thread.","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"IbBnt3s32e"},{"type":"break","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"gjkQxLyWN5"},{"type":"text","value":"This is only useful for debugging and profiling, but does not have any parallelization.","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"rwgVxhcjwC"}],"key":"Fm8VS4dkuu"},{"type":"heading","depth":4,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"1.2. Threaded scheduler","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"uDHXqnELzv"}],"identifier":"id-1-2-threaded-scheduler","label":"1.2. Threaded scheduler","html_id":"id-1-2-threaded-scheduler","implicit":true,"key":"hpOpkQxUYZ"},{"type":"paragraph","position":{"start":{"line":22,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"The threaded scheduler uses a pool of ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"wjPQrpzdpy"},{"type":"strong","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"local","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"A0XoYnzSOI"}],"key":"OTqUPqPA5p"},{"type":"text","value":" threads to execute tasks concurrently.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"W2QNSziCAq"},{"type":"break","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"RXJlqz10KC"},{"type":"text","value":"This is the default scheduler for Dask, and is suitable for most use cases on a single machine. Multithreading works well for Dask Array and Dask DataFrame.","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"gUqG0WZVcN"}],"key":"Xu9WpRxpYb"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"To select one of the above scheduler for your computation, you can specify it when doing ","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"cEj4RA634E"},{"type":"inlineCode","value":".compute()","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"d686iXEnc6"},{"type":"text","value":":","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"BtUrjzYkB0"}],"key":"PI8KkqSnOG"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"For example:","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"ABvJPGk7XV"}],"key":"KX34EdoMAY"},{"type":"code","lang":"python","value":"this.compute(scheduler=\"single-threaded\")  # for debugging and profiling only","position":{"start":{"line":28,"column":1},"end":{"line":30,"column":1}},"key":"nRbFaDajp6"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"As mentioned above the ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"kGAnM72CON"},{"type":"emphasis","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"threaded scheduler","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"npwovyuw7S"}],"key":"FlJ2S5Mdvq"},{"type":"text","value":" is the default scheduler in Dask. But you can set the default scheduler to Single-threaded or multi-processing by:","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"xnksbmHmj2"}],"key":"uhkiYSyaoB"},{"type":"code","lang":"python","value":"import dask\ndask.config.set(scheduler='synchronous')  # overwrite default with single-threaded scheduler","position":{"start":{"line":35,"column":1},"end":{"line":38,"column":1}},"key":"KRpWcH425d"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"Multi-processing works well for pure Python code - ","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"rxa8U9rJNc"},{"type":"emphasis","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"delayed","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"wPkFK6qAd9"}],"key":"xVOyuVGZuk"},{"type":"text","value":" functions and operations on Dask Bags.","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"GUHbJYX6jz"}],"key":"PACDkqXgbC"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Let’s compare the performance of each of these single-machine schedulers:","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Ukq3VgESAo"}],"key":"nEsglIheNr"}],"key":"EdJ3JhMFuR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport dask.array as da","key":"JgoY6PnXbN"},{"type":"output","id":"_z3VqlEU_ekEkQvFKD-K4","data":[],"key":"uukahAg4BM"}],"key":"dOIG6rT7aw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n## - numpy performance\nxn = np.random.normal(10, 0.1, size=(20_000, 20_000))\nyn = xn.mean(axis=0)\nyn","key":"zR5GMZpTKh"},{"type":"output","id":"ZsWMCkvmxJStUw3ohonlo","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 11.6 s, sys: 316 ms, total: 11.9 s\nWall time: 14.1 s\n"},{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"array([10.00028041,  9.99979968, 10.00059871, ...,  9.99946021,\n       10.0017693 ,  9.99986144], shape=(20000,))","content_type":"text/plain"}}}],"key":"dcCrjtp9CV"}],"key":"JxcymvQU2s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n# -- dask array using the default\nxd = da.random.normal(10, 0.1, size=(20_000, 20_000), chunks=(2000, 2000))\nyd = xd.mean(axis=0)\nyd.compute()","key":"ny2aQbkP9W"},{"type":"output","id":"vl9prcz1ZmAhk4p_gHfMW","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 13.9 s, sys: 133 ms, total: 14 s\nWall time: 8.3 s\n"},{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"array([9.99952205, 9.9995271 , 9.99923995, ..., 9.99895244, 9.99945775,\n       9.99952351], shape=(20000,))","content_type":"text/plain"}}}],"key":"fLR4PKBmgC"}],"key":"Wo9Ag2Efdm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import time\n# -- dask testing different schedulers:\nfor sch in ['threading', 'processes', 'sync']:\n    t0 = time.time()\n    r = yd.compute(scheduler=sch)\n    t1 = time.time()\n    print(f\"{sch:>10} :  {t1 - t0:0.4f} s\")","key":"z9JNPGfSjf"},{"type":"output","id":"2QbQ7nKNhd9MzS8oq2WPr","data":[{"output_type":"stream","name":"stdout","text":" threading :  9.0265 s\n"},{"output_type":"stream","name":"stdout","text":" processes :  12.7101 s\n"},{"output_type":"stream","name":"stdout","text":"      sync :  17.2581 s\n"}],"key":"E0K6t23aOk"}],"key":"AmTHaUHhnn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"yd.dask","key":"vZrSsvStLe"},{"type":"output","id":"k6DsCja8FcS-yiauaw694","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"HighLevelGraph with 4 layers.\n<dask.highlevelgraph.HighLevelGraph object at 0x7f3417b9a780>\n 0. normal-edc669ee3fa9435bb0e6589f851947b9\n 1. mean_chunk-d84fcc45b1de17bfb496e0acfb17f390\n 2. mean_combine-partial-3445c9f746e4ac7a4be9a2cfdd38bce1\n 3. mean_agg-aggregate-76b15e26c90526f5d759803ed7fbc5aa","content_type":"text/plain"},"text/html":{"content":"<div>\n    <div>\n        <div style=\"width: 52px; height: 52px; position: absolute;\">\n            <svg width=\"76\" height=\"71\" viewBox=\"0 0 76 71\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"61.5\" cy=\"36.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n                <circle cx=\"14.5\" cy=\"14.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n                <circle cx=\"14.5\" cy=\"56.5\" r=\"13.5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D); fill: var(--jp-layout-color1, #F2F2F2);\" stroke-width=\"2\"/>\n                <path d=\"M28 16L30.5 16C33.2614 16 35.5 18.2386 35.5 21L35.5 32.0001C35.5 34.7615 37.7386 37.0001 40.5 37.0001L43 37.0001\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n                <path d=\"M40.5 37L40.5 37.75L40.5 37.75L40.5 37ZM35.5 42L36.25 42L35.5 42ZM35.5 52L34.75 52L35.5 52ZM30.5 57L30.5 57.75L30.5 57ZM41.5001 36.25L40.5 36.25L40.5 37.75L41.5001 37.75L41.5001 36.25ZM34.75 42L34.75 52L36.25 52L36.25 42L34.75 42ZM30.5 56.25L28.0001 56.25L28.0001 57.75L30.5 57.75L30.5 56.25ZM34.75 52C34.75 54.3472 32.8472 56.25 30.5 56.25L30.5 57.75C33.6756 57.75 36.25 55.1756 36.25 52L34.75 52ZM40.5 36.25C37.3244 36.25 34.75 38.8243 34.75 42L36.25 42C36.25 39.6528 38.1528 37.75 40.5 37.75L40.5 36.25Z\" style=\"fill: var(--jp-ui-font-color2, #1D1D1D);\"/>\n                <circle cx=\"28\" cy=\"16\" r=\"2.25\" fill=\"#E5E5E5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n                <circle cx=\"28\" cy=\"57\" r=\"2.25\" fill=\"#E5E5E5\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"1.5\"/>\n                <path d=\"M45.25 36.567C45.5833 36.7594 45.5833 37.2406 45.25 37.433L42.25 39.1651C41.9167 39.3575 41.5 39.117 41.5 38.7321V35.2679C41.5 34.883 41.9167 34.6425 42.25 34.8349L45.25 36.567Z\" style=\"fill: var(--jp-ui-font-color2, #1D1D1D);\"/>\n            </svg>\n        </div>\n        <div style=\"margin-left: 64px;\">\n            <h3 style=\"margin-bottom: 0px;\">HighLevelGraph</h3>\n            <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin-bottom:0px;\">\n                HighLevelGraph with 4 layers and 240 keys from all layers.\n            </p>\n            \n            <div style=\"\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n        \n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n        \n    </svg>\n\n    <details style=\"margin-left: 32px;\">\n        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n            <h4 style=\"display: inline;\">Layer1: normal</h4>\n        </summary>\n        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n            normal-edc669ee3fa9435bb0e6589f851947b9\n        </p>\n\n        <table>\n        <tr>\n            <td>\n                <table>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n                        <td style=\"text-align: left;\">MaterializedLayer</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n                        <td style=\"text-align: left;\">True</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n                        <td style=\"text-align: left;\">100</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">shape</th>\n                        <td style=\"text-align: left;\">(20000, 20000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">dtype</th>\n                        <td style=\"text-align: left;\">float64</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunksize</th>\n                        <td style=\"text-align: left;\">(2000, 2000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">type</th>\n                        <td style=\"text-align: left;\">dask.array.core.Array</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunk_type</th>\n                        <td style=\"text-align: left;\">numpy.ndarray</td>\n                    </tr>\n                \n                \n                </table>\n            </td>\n            <td>\n                <svg width=\"250\" height=\"250\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"200\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"20\" x2=\"200\" y2=\"20\" />\n  <line x1=\"0\" y1=\"40\" x2=\"200\" y2=\"40\" />\n  <line x1=\"0\" y1=\"60\" x2=\"200\" y2=\"60\" />\n  <line x1=\"0\" y1=\"80\" x2=\"200\" y2=\"80\" />\n  <line x1=\"0\" y1=\"100\" x2=\"200\" y2=\"100\" />\n  <line x1=\"0\" y1=\"120\" x2=\"200\" y2=\"120\" />\n  <line x1=\"0\" y1=\"140\" x2=\"200\" y2=\"140\" />\n  <line x1=\"0\" y1=\"160\" x2=\"200\" y2=\"160\" />\n  <line x1=\"0\" y1=\"180\" x2=\"200\" y2=\"180\" />\n  <line x1=\"0\" y1=\"200\" x2=\"200\" y2=\"200\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"200\" style=\"stroke-width:2\" />\n  <line x1=\"20\" y1=\"0\" x2=\"20\" y2=\"200\" />\n  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"200\" />\n  <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"200\" />\n  <line x1=\"80\" y1=\"0\" x2=\"80\" y2=\"200\" />\n  <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"200\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"200\" />\n  <line x1=\"140\" y1=\"0\" x2=\"140\" y2=\"200\" />\n  <line x1=\"160\" y1=\"0\" x2=\"160\" y2=\"200\" />\n  <line x1=\"180\" y1=\"0\" x2=\"180\" y2=\"200\" />\n  <line x1=\"200\" y1=\"0\" x2=\"200\" y2=\"200\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 200.0,0.0 200.0,200.0 0.0,200.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"100.000000\" y=\"220.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >20000</text>\n  <text x=\"220.000000\" y=\"100.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,220.000000,100.000000)\">20000</text>\n</svg>\n            </td>\n        </tr>\n        </table>\n\n    </details>\n</div>\n            \n            <div style=\"\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n        \n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n        \n    </svg>\n\n    <details style=\"margin-left: 32px;\">\n        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n            <h4 style=\"display: inline;\">Layer2: mean_chunk</h4>\n        </summary>\n        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n            mean_chunk-d84fcc45b1de17bfb496e0acfb17f390\n        </p>\n\n        <table>\n        <tr>\n            <td>\n                <table>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n                        <td style=\"text-align: left;\">Blockwise</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n                        <td style=\"text-align: left;\">True</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n                        <td style=\"text-align: left;\">100</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">shape</th>\n                        <td style=\"text-align: left;\">(20000, 20000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">dtype</th>\n                        <td style=\"text-align: left;\">float64</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunksize</th>\n                        <td style=\"text-align: left;\">(2000, 2000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">type</th>\n                        <td style=\"text-align: left;\">dask.array.core.Array</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunk_type</th>\n                        <td style=\"text-align: left;\">numpy.ndarray</td>\n                    </tr>\n                \n                \n                    \n                        <tr>\n                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n                            <td style=\"text-align: left;\">normal-edc669ee3fa9435bb0e6589f851947b9</td>\n                        </tr>\n                    \n                \n                </table>\n            </td>\n            <td>\n                <svg width=\"250\" height=\"250\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"200\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"20\" x2=\"200\" y2=\"20\" />\n  <line x1=\"0\" y1=\"40\" x2=\"200\" y2=\"40\" />\n  <line x1=\"0\" y1=\"60\" x2=\"200\" y2=\"60\" />\n  <line x1=\"0\" y1=\"80\" x2=\"200\" y2=\"80\" />\n  <line x1=\"0\" y1=\"100\" x2=\"200\" y2=\"100\" />\n  <line x1=\"0\" y1=\"120\" x2=\"200\" y2=\"120\" />\n  <line x1=\"0\" y1=\"140\" x2=\"200\" y2=\"140\" />\n  <line x1=\"0\" y1=\"160\" x2=\"200\" y2=\"160\" />\n  <line x1=\"0\" y1=\"180\" x2=\"200\" y2=\"180\" />\n  <line x1=\"0\" y1=\"200\" x2=\"200\" y2=\"200\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"200\" style=\"stroke-width:2\" />\n  <line x1=\"20\" y1=\"0\" x2=\"20\" y2=\"200\" />\n  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"200\" />\n  <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"200\" />\n  <line x1=\"80\" y1=\"0\" x2=\"80\" y2=\"200\" />\n  <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"200\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"200\" />\n  <line x1=\"140\" y1=\"0\" x2=\"140\" y2=\"200\" />\n  <line x1=\"160\" y1=\"0\" x2=\"160\" y2=\"200\" />\n  <line x1=\"180\" y1=\"0\" x2=\"180\" y2=\"200\" />\n  <line x1=\"200\" y1=\"0\" x2=\"200\" y2=\"200\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 200.0,0.0 200.0,200.0 0.0,200.0\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"100.000000\" y=\"220.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >20000</text>\n  <text x=\"220.000000\" y=\"100.000000\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,220.000000,100.000000)\">20000</text>\n</svg>\n            </td>\n        </tr>\n        </table>\n\n    </details>\n</div>\n            \n            <div style=\"\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n        \n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n        \n    </svg>\n\n    <details style=\"margin-left: 32px;\">\n        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n            <h4 style=\"display: inline;\">Layer3: mean_combine-partial</h4>\n        </summary>\n        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n            mean_combine-partial-3445c9f746e4ac7a4be9a2cfdd38bce1\n        </p>\n\n        <table>\n        <tr>\n            <td>\n                <table>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n                        <td style=\"text-align: left;\">MaterializedLayer</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n                        <td style=\"text-align: left;\">True</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n                        <td style=\"text-align: left;\">30</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">shape</th>\n                        <td style=\"text-align: left;\">(3, 20000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">dtype</th>\n                        <td style=\"text-align: left;\">float64</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunksize</th>\n                        <td style=\"text-align: left;\">(1, 2000)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">type</th>\n                        <td style=\"text-align: left;\">dask.array.core.Array</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunk_type</th>\n                        <td style=\"text-align: left;\">numpy.ndarray</td>\n                    </tr>\n                \n                \n                    \n                        <tr>\n                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n                            <td style=\"text-align: left;\">mean_chunk-d84fcc45b1de17bfb496e0acfb17f390</td>\n                        </tr>\n                    \n                \n                </table>\n            </td>\n            <td>\n                <svg width=\"250\" height=\"92\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"200\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"14\" x2=\"200\" y2=\"14\" />\n  <line x1=\"0\" y1=\"28\" x2=\"200\" y2=\"28\" />\n  <line x1=\"0\" y1=\"42\" x2=\"200\" y2=\"42\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"42\" style=\"stroke-width:2\" />\n  <line x1=\"20\" y1=\"0\" x2=\"20\" y2=\"42\" />\n  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"42\" />\n  <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"42\" />\n  <line x1=\"80\" y1=\"0\" x2=\"80\" y2=\"42\" />\n  <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"42\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"42\" />\n  <line x1=\"140\" y1=\"0\" x2=\"140\" y2=\"42\" />\n  <line x1=\"160\" y1=\"0\" x2=\"160\" y2=\"42\" />\n  <line x1=\"180\" y1=\"0\" x2=\"180\" y2=\"42\" />\n  <line x1=\"200\" y1=\"0\" x2=\"200\" y2=\"42\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 200.0,0.0 200.0,42.354360857637474 0.0,42.354360857637474\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"100.000000\" y=\"62.354361\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >20000</text>\n  <text x=\"220.000000\" y=\"21.177180\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,220.000000,21.177180)\">3</text>\n</svg>\n            </td>\n        </tr>\n        </table>\n\n    </details>\n</div>\n            \n            <div style=\"\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" style=\"position: absolute;\">\n        \n        <circle cx=\"16\" cy=\"16\" r=\"14\" fill=\"#8F8F8F\" style=\"stroke: var(--jp-ui-font-color2, #1D1D1D);\" stroke-width=\"2\"/>\n        \n    </svg>\n\n    <details style=\"margin-left: 32px;\">\n        <summary style=\"margin-bottom: 10px; margin-top: 10px;\">\n            <h4 style=\"display: inline;\">Layer4: mean_agg-aggregate</h4>\n        </summary>\n        <p style=\"color: var(--jp-ui-font-color2, #5D5851); margin: -0.25em 0px 0px 0px;\">\n            mean_agg-aggregate-76b15e26c90526f5d759803ed7fbc5aa\n        </p>\n\n        <table>\n        <tr>\n            <td>\n                <table>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">layer_type</th>\n                        <td style=\"text-align: left;\">MaterializedLayer</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">is_materialized</th>\n                        <td style=\"text-align: left;\">True</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">number of outputs</th>\n                        <td style=\"text-align: left;\">10</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">shape</th>\n                        <td style=\"text-align: left;\">(20000,)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">dtype</th>\n                        <td style=\"text-align: left;\">float64</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunksize</th>\n                        <td style=\"text-align: left;\">(2000,)</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">type</th>\n                        <td style=\"text-align: left;\">dask.array.core.Array</td>\n                    </tr>\n                \n                    <tr>\n                        <th style=\"text-align: left; width: 150px;\">chunk_type</th>\n                        <td style=\"text-align: left;\">numpy.ndarray</td>\n                    </tr>\n                \n                \n                    \n                        <tr>\n                            <th style=\"text-align: left; width: 150px;\"> depends on </th>\n                            <td style=\"text-align: left;\">mean_combine-partial-3445c9f746e4ac7a4be9a2cfdd38bce1</td>\n                        </tr>\n                    \n                \n                </table>\n            </td>\n            <td>\n                <svg width=\"250\" height=\"92\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"200\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"42\" x2=\"200\" y2=\"42\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"42\" style=\"stroke-width:2\" />\n  <line x1=\"20\" y1=\"0\" x2=\"20\" y2=\"42\" />\n  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"42\" />\n  <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"42\" />\n  <line x1=\"80\" y1=\"0\" x2=\"80\" y2=\"42\" />\n  <line x1=\"100\" y1=\"0\" x2=\"100\" y2=\"42\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"42\" />\n  <line x1=\"140\" y1=\"0\" x2=\"140\" y2=\"42\" />\n  <line x1=\"160\" y1=\"0\" x2=\"160\" y2=\"42\" />\n  <line x1=\"180\" y1=\"0\" x2=\"180\" y2=\"42\" />\n  <line x1=\"200\" y1=\"0\" x2=\"200\" y2=\"42\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 200.0,0.0 200.0,42.354360857637474 0.0,42.354360857637474\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"100.000000\" y=\"62.354361\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >20000</text>\n  <text x=\"220.000000\" y=\"21.177180\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,220.000000,21.177180)\">1</text>\n</svg>\n            </td>\n        </tr>\n        </table>\n\n    </details>\n</div>\n            \n        </div>\n    </div>\n</div>","content_type":"text/html"}}}],"key":"DKQXjvfEUx"}],"key":"IgBJaVy8bK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"yd","key":"AmDfOIQNqH"},{"type":"output","id":"kGWtQCtAybqMapq4vwhpv","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"dask.array<mean_agg-aggregate, shape=(20000,), dtype=float64, chunksize=(2000,), chunktype=numpy.ndarray>","content_type":"text/plain"},"text/html":{"content":"<table>\n    <tr>\n        <td>\n            <table style=\"border-collapse: collapse;\">\n                <thead>\n                    <tr>\n                        <td> </td>\n                        <th> Array </th>\n                        <th> Chunk </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    <tr>\n                        <th> Bytes </th>\n                        <td> 156.25 kiB </td>\n                        <td> 15.62 kiB </td>\n                    </tr>\n                    \n                    <tr>\n                        <th> Shape </th>\n                        <td> (20000,) </td>\n                        <td> (2000,) </td>\n                    </tr>\n                    <tr>\n                        <th> Dask graph </th>\n                        <td colspan=\"2\"> 10 chunks in 4 graph layers </td>\n                    </tr>\n                    <tr>\n                        <th> Data type </th>\n                        <td colspan=\"2\"> float64 numpy.ndarray </td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n        <td>\n        <svg width=\"170\" height=\"75\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n\n  <!-- Horizontal lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n\n  <!-- Vertical lines -->\n  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n  <line x1=\"12\" y1=\"0\" x2=\"12\" y2=\"25\" />\n  <line x1=\"24\" y1=\"0\" x2=\"24\" y2=\"25\" />\n  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"25\" />\n  <line x1=\"48\" y1=\"0\" x2=\"48\" y2=\"25\" />\n  <line x1=\"60\" y1=\"0\" x2=\"60\" y2=\"25\" />\n  <line x1=\"72\" y1=\"0\" x2=\"72\" y2=\"25\" />\n  <line x1=\"84\" y1=\"0\" x2=\"84\" y2=\"25\" />\n  <line x1=\"96\" y1=\"0\" x2=\"96\" y2=\"25\" />\n  <line x1=\"108\" y1=\"0\" x2=\"108\" y2=\"25\" />\n  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n\n  <!-- Colored Rectangle -->\n  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n\n  <!-- Text -->\n  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >20000</text>\n  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n</svg>\n        </td>\n    </tr>\n</table>","content_type":"text/html"}}}],"key":"WgRt6bP2H4"}],"key":"V3z0C35VZz"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice how ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qXNmIBDxpL"},{"type":"inlineCode","value":"sync","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xmfPaaOypV"},{"type":"text","value":" scheduler takes almost the same time as pure NumPy code.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mY4iCQVAMy"}],"key":"zIHMR0EgB5"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Why is the multiprocessing scheduler so much slower?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WNyVoUIsOa"}],"key":"ybEwywutRw"}],"key":"vbrb0D77QC"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If you use the multiprocessing backend, all communication between processes still needs to pass through the main process because processes are isolated from other processes. This introduces a large overhead.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tbA9Jaa3ls"}],"key":"RhcYrgV5H4"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The Dask developers recommend using the Dask Distributed Scheduler which we will cover now.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Z6FzIGK8wA"}],"key":"ZzL94olhCz"}],"key":"pAfKag0P3s"}],"key":"vQu9cm2KX4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"2. Distributed scheduler","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"U1PFJ2PwJO"}],"identifier":"id-2-distributed-scheduler","label":"2. Distributed scheduler","html_id":"id-2-distributed-scheduler","implicit":true,"key":"LSV0fB4Fui"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Distributed scheduler or ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LAKSKNtEfg"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OTAfgGWieR"},{"type":"text","value":" schedules tasks and manages the execution of those tasks on workers from a single or multiple machines.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VfFCb07fLj"}],"key":"wHoJi5A8NS"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This scheduler is more sophisticated and offers more features including a live diagnostic dashboard which provides live insight on performance and progress of the calculations.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xGLeWuds26"}],"key":"JlaJnrRE2d"}],"key":"jaIJPFldot"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"In most cases, ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sUcaDICZL1"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PWW1qjK1zi"},{"type":"text","value":" is preferred since it is very scalable, and provides and informative interactive dashboard and access to more complex Dask collections such as ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tsIaLA38bv"},{"type":"inlineCode","value":"futures","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UNiXamz1fc"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"fxZI2ePF8H"}],"key":"J3SL5XJCbB"}],"key":"RTWSzCt52T"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.1. Local Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xPIB7KZYxB"}],"identifier":"id-2-1-local-cluster","label":"2.1. Local Cluster","html_id":"id-2-1-local-cluster","implicit":true,"key":"eIqKBC6QwV"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A Dask Local Cluster refers to a group of worker processes that run on a single machine and are managed by a single Dask scheduler.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ktorpho7WW"}],"key":"eLLPR49NvP"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This is useful for situations where the computational requirements are not large enough to warrant the use of a full cluster of separate machines. It provides an easy way to run parallel computations on a single machine, without the need for complex cluster management or other infrastructure.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dpConrVvXi"}],"key":"n4KoUbmeNO"}],"key":"q3X57P1vMq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":5,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s start by creating a Local Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oH3rRJNFAC"}],"identifier":"lets-start-by-creating-a-local-cluster","label":"Let’s start by creating a Local Cluster","html_id":"lets-start-by-creating-a-local-cluster","implicit":true,"key":"nChdwcg3nr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For this we need to set up a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NPzDNSNMgU"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CIzTqmhBQX"},{"type":"text","value":" using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wa2YkiUPfb"},{"type":"inlineCode","value":"dask.distributed","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tUbwrrwkcx"},{"type":"text","value":" and connect a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VsrLYye4gC"},{"type":"inlineCode","value":"client","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UhAIGjedtc"},{"type":"text","value":" to it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nR9AkITUKN"}],"key":"A7jE2TtM8Y"}],"key":"HfLFYxQ5z6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from dask.distributed import LocalCluster, Client\n\ncluster = LocalCluster()\nclient = Client(cluster)\nclient","key":"hYeXICgCPg"},{"type":"output","id":"0GS9CRaguGg5zQooOSHD6","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"<Client: 'tcp://127.0.0.1:45425' processes=4 threads=4, memory=15.62 GiB>","content_type":"text/plain"},"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-0b86c93b-700e-11f0-8f5b-7ced8d18b977</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> distributed.LocalCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n            <button style=\"margin-bottom: 12px;\" data-commandlinker-command=\"dask:populate-and-launch-layout\" data-commandlinker-args='{\"url\": \"http://127.0.0.1:8787/status\" }'>\n                Launch dashboard in JupyterLab\n            </button>\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">b4cc24e1</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-6d1105f2-4bf3-42c7-95c3-9131d9706018</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:45425\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:41553\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:45327/status\" target=\"_blank\">http://127.0.0.1:45327/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:35463\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-pfordb_w\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:37911\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:46399/status\" target=\"_blank\">http://127.0.0.1:46399/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:42343\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-z_g5xbu6\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:34337\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:44311/status\" target=\"_blank\">http://127.0.0.1:44311/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:35923\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-5drh_lkt\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:34339\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:42873/status\" target=\"_blank\">http://127.0.0.1:42873/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:33845\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-tfmgkvab\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"}}}],"key":"iom7gwci6d"}],"key":"Jf0UJTXiE5"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"☝️ Click the Dashboard link above.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z2L4JtGvC7"}],"key":"WnHV5674QN"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"👈 Or click the “Search” 🔍 button in the dask-labextension dashboard.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MpuabdYzO3"}],"key":"W3m1ey8Z6L"}],"key":"oJotve1n6Y"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"If no arguments are specified in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dHIv5lUG95"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DF8LFGhm3P"},{"type":"text","value":" it will automatically detect the number of CPU cores your system has and the amount of memory and create workers to appropriately fill that.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SLNdtoZz7J"}],"key":"U9rdDgVtSI"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CTmc1rsaOP"},{"type":"inlineCode","value":"LocalCluster","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IOHDF7E1rW"},{"type":"text","value":" will use the full resources of the current JupyterLab session.  For example, if you used BinderHub, it will use the number of CPUs selected.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ej28YHPP8m"}],"key":"ZjtUPMJDIg"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Note that ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yFVPPa2HcO"},{"type":"inlineCode","value":"LocalCluster()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yrE61QeMKk"},{"type":"text","value":" takes a lot of optional arguments, allowing you to configure the number of processes/threads, memory limits and other settings.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CTuYkfT7gP"}],"key":"SUnpEzeOfm"}],"key":"Ybzm102los"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can also find your cluster dashboard link using :","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b10Jp4SWJ2"}],"key":"SPo3Zkp7zO"}],"key":"KX5DV6WAxb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"cluster.dashboard_link","key":"WNEmYyuzBK"},{"type":"output","id":"ufNEq7pl8fODe4i1g0obs","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"'http://127.0.0.1:8787/status'","content_type":"text/plain"}}}],"key":"oKs7fUUpjT"}],"key":"Cr9rjXfts7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n# -- dask array using the default\nxd = da.random.normal(10, 0.1, size=(30_000, 30_000), chunks=(3000, 3000))\nyd = xd.mean(axis=0)\nyd.compute()","key":"X0IupzWrFw"},{"type":"output","id":"Xod5YvHlVgpglhNtS_sO_","data":[{"output_type":"stream","name":"stdout","text":"CPU times: user 926 ms, sys: 178 ms, total: 1.1 s\nWall time: 19 s\n"},{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"array([ 9.99974706, 10.00070125, 10.00024816, ...,  9.99997091,\n       10.0001475 , 10.00001904], shape=(30000,))","content_type":"text/plain"}}}],"key":"aaO428qW4I"}],"key":"IlM0OIh1H9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Always remember to close your local Dask cluster:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AFCXQThUzN"}],"key":"HQ5UTZhuet"}],"key":"GPiZeIONEa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client.shutdown()","key":"OFok5K6RVB"},{"type":"output","id":"3SHPMMe3PTyfLwX0-9cbQ","data":[],"key":"NmeJo7R3Wu"}],"key":"FClu4AUMRi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dask Distributed (Cluster Managers)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"khaaFajihz"}],"identifier":"dask-distributed-cluster-managers","label":"Dask Distributed (Cluster Managers)","html_id":"dask-distributed-cluster-managers","implicit":true,"key":"FEJV4I6f0B"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"So far we have talked about running a job on a local machine.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"krFy5gm6t7"}],"key":"RG0VDPMHe9"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Dask can be deployed on distributed infrastructure, such as a an HPC system or a cloud computing system.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bvHGyBhz2x"}],"key":"bzRo8GE2Mx"},{"type":"image","style":{"verticalAlign":"middle","margin":"30px 0px"},"url":"/dask-cookbook/build/5bb4678f8c7e666155eecf57b9320e34.svg","alt":"High level collections are used to generate task graphs which can be executed by schedulers on a single machine or a cluster.","width":"75%","key":"MMbhaCHkM8","urlSource":"https://docs.dask.org/en/stable/_images/dask-cluster-manager.svg"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Image credit: Dask Contributors","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"r5iGHSnmZQ"}],"key":"TV6bnIVVzK"}],"key":"FcS2Uj7ox4"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Dask Cluster Managers have different names corresponding to different computing environments. Some examples are ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"bpDEUxzzau"},{"type":"inlineCode","value":"dask-jobqueue","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"yHFRIFsxUY"},{"type":"text","value":" for your HPC systems (including ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"X4b4NihdNL"},{"type":"inlineCode","value":"PBSCluster","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"c81TRTWUGj"},{"type":"text","value":") or Kubernetes Cluster for machines on the Cloud.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mQCuTftgGQ"}],"key":"l17L5wSs20"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"The NCAR tutorial series includes an in-depth exploration and practical use cases of Dask on HPC systems and best practices for Dask on HPC. For the complete set of NCAR tutorial materials, please refer to the main NCAR tutorial content available ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"wzz8ggF3DH"},{"type":"link","url":"https://ncar.github.io/dask-tutorial/README.html","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Tl7fiqYVxf"}],"urlSource":"https://ncar.github.io/dask-tutorial/README.html","key":"UGkS7nzIsA"},{"type":"text","value":".","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"hwmEKXzHcI"}],"key":"OnrJhChqyY"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"For more information visit the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"aPxKBkcXJC"},{"type":"link","url":"https://docs.dask.org/en/stable/deploying.html","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Dask Docs","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"rA9MNGs5SQ"}],"urlSource":"https://docs.dask.org/en/stable/deploying.html","key":"lY9PUJ88Em"},{"type":"text","value":".","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"KXji8B9jCq"}],"key":"X8hEQFGsmv"}],"key":"p36ohsGEC6"}],"key":"HEoOa2STNO"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dask DataFrame","url":"/notebooks/dask-dataframe","group":"Introductions to Dask"},"next":{"title":"Parallelizing Xarray with Dask","url":"/notebooks/dask-xarray","group":"Dask and Xarray"}}},"domain":"http://localhost:3000"}